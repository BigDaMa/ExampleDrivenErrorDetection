import numpy as np
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform_latex


labels_all = [4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 78, 88, 98, 108, 118, 128, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 238, 248, 258, 268, 278, 288, 298, 308, 318, 328, 338, 348, 358, 368, 378, 388, 398, 408, 418, 428, 438, 448, 458, 468, 478, 488, 498, 508, 518, 528, 538, 548, 558, 568, 578, 588, 598, 608, 618, 628, 638, 648, 658, 668, 678, 688, 698, 708, 718, 728, 738, 748, 758, 768, 778, 788, 798, 808, 818, 828, 838]

svm_sim = []
svm_sim.append([0.02048352654147743, 0.022000074577998817, 0.023696884788835505, 0.024650501103106567, 0.02404280777281505, 0.022816357277248695, 0.025178114720557736, 0.02860728492176337, 0.03797569316203801, 0.03647548725180065, 0.03617794432856393, 0.03714683494226896, 0.03624162802846786, 0.036092493794530445, 0.0347834598368438, 0.0348065152086272, 0.03392041983638314, 0.03824076334426753, 0.040124488005309045, 0.0418358850958486, 0.043013118676393666, 0.051898541164973645, 0.05854308938268232, 0.060319750256272286, 0.06713911888629784, 0.0691777671891317, 0.0750852765048947, 0.08576044764858934, 0.0982264159404574, 0.11613643677616711, 0.1386310760900337, 0.16671803984072647, 0.1932819868898425, 0.26358197700192976, 0.3026972908457222, 0.32934377713744223, 0.3532002743011114, 0.36503895469016695, 0.3789712098883609, 0.39710600066989477, 0.41828946742321343, 0.4297386923046121, 0.44008199474948534, 0.458708843976064, 0.4719009023788015, 0.4860003614577737, 0.507997966407513, 0.5261715642832286, 0.5340882847393671, 0.5532610657314445, 0.5620452878959022, 0.5746906396499354, 0.59093790457037, 0.6076160311136964, 0.6217323230040046, 0.6387808448590795, 0.6711070817686824, 0.683624098803261, 0.7073052587094935, 0.7203690716941636, 0.7308251177844942, 0.743211035669811, 0.800980293747892, 0.8088587629227477, 0.818800123913215, 0.8177995382916375, 0.844332375185455, 0.8543282334897366, 0.8739735735759305, 0.8863353078803655, 0.8929159826637519, 0.8885027389338349, 0.9046454027408004, 0.9107239633215596, 0.9193703908413952, 0.9246126426281869, 0.9325320130696959, 0.9355143690106121, 0.941320961932299, 0.949123313548917, 0.9563946474096318, 0.9648479971714489, 0.9692630876058045, 0.9728198226973503, 0.975868800813142, 0.979384470724421, 0.9819828102035357, 0.9854195567959572, 0.9878231596078717, 0.9893768346659986, 0.990174908492753, 0.9913456785432595, 0.9937051526242457, 0.9947917009376537])
average_svm_sim = list(np.mean(np.matrix(svm_sim), axis=0).A1)

bayes_sim = []
bayes_sim.append([0.04505747729235701, 0.05096525271561554, 0.060715222002655625, 0.0663844615051172, 0.07073061470500477, 0.07941650514907758, 0.08219384318038514, 0.08790471722006624, 0.09111305573265015, 0.08988179112261303, 0.08867966897711518, 0.08791231121427918, 0.08756425884074504, 0.08900080433792475, 0.08766607356215986, 0.08795648678004718, 0.0885440804926806, 0.08932612859314351, 0.09127434249179608, 0.09168999261155775, 0.09338838704117154, 0.09639020532244295, 0.09698867064577361, 0.0990602640158291, 0.0991638684205893, 0.0995346182101711, 0.10357290206754795, 0.1069700575079644, 0.11021020358948438, 0.11506806195288463, 0.11840995231120126, 0.12353908212507263, 0.12775003537278146, 0.13056175263713682, 0.1322358467317011, 0.134453243373662, 0.13724237764761116, 0.1401356930864912, 0.14195335354875893, 0.14510391199710843, 0.1478972934074005, 0.1480629770698395, 0.1523859207580287, 0.15416000318542553, 0.1558723214271059, 0.15983000157326638, 0.16616659013155877, 0.17195972191009068, 0.1769253167605193, 0.18251028141436504, 0.18733701663344124, 0.1912534597283997, 0.19514790837700663, 0.19758824530738806, 0.20033228575288842, 0.2030558357716607, 0.20619911861061008, 0.2087563879030372, 0.21389423590516282, 0.21921136581195927, 0.22317432451332544, 0.22532742605970194, 0.23116235096310964, 0.23722056856580118, 0.2422082494245974, 0.24559961319996226, 0.24847750959684456, 0.25076113555971014, 0.25460625845352114, 0.2576073096226189, 0.2603436243512393, 0.26566441789807604, 0.27094216229864915, 0.2740188681354497, 0.2797682584867921, 0.2842727228715522, 0.28998237548971756, 0.29392757062406216, 0.29860031659246383, 0.3047561235419832, 0.3107329186413201, 0.31257609692115007, 0.31575203239715155, 0.3207353457872296, 0.32311669845642543, 0.3259495599167284, 0.3301579144188052, 0.3304043095659167, 0.332544737110214, 0.33524574581985, 0.33916216580357633, 0.34254645603614803, 0.3467918265117314, 0.35060669084369167])
average_bayes_sim = list(np.mean(np.matrix(bayes_sim), axis=0).A1)

trees_sim = []
trees_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.09114085298452511, 0.14018158226640678, 0.15213034066341682, 0.23881720593609357, 0.22032626298700847, 0.2577751486474637, 0.33516538478088204, 0.3920906138181141, 0.22541389470399134, 0.24959116642672896, 0.27232865948192675, 0.26553985365156246, 0.26553985365156246, 0.2697226898625548, 0.2697226898625548, 0.2735857180562225, 0.2735857180562225, 0.31505766813325303, 0.38745437974746066, 0.49419318967236825, 0.5839194541528447, 0.5946468210663018, 0.6249385383171544, 0.7144030458512629, 0.739834442321638, 0.7502304487948935, 0.7773842603600989, 0.7898613098490587, 0.8005732257339646, 0.8198839786652098, 0.8299843911342926, 0.8372004366147712, 0.888558892078309, 0.8987770265214584, 0.900078942291518, 0.906557127503169, 0.9185799202439313, 0.9097066948764393, 0.9285412013047292, 0.9285412013047292, 0.9305135825290378, 0.9386308966260921, 0.9417017545989109, 0.9435108373690329, 0.9473207068176672, 0.9544502444321571, 0.9599777871554342, 0.9611137637106962, 0.9639334434150264, 0.9670575555738681, 0.9697706703279666, 0.9717962893698141, 0.974089345818415, 0.974089345818415, 0.9745056315700149, 0.9745056315700149, 0.9745056315700149, 0.9774319686033145, 0.9774319686033145, 0.9785710857519205, 0.9785710857519205, 0.9785710857519205, 0.9785710857519205, 0.9785710857519205, 0.9785710857519205, 0.9807458242655042, 0.9807458242655042, 0.9807458242655042, 0.9807458242655042, 0.9807458242655042, 0.9823331258528057, 0.9823331258528057, 0.9823331258528057, 0.9851635472299897, 0.9871635472299897, 0.9871635472299897, 0.9871635472299897])
average_trees_sim = list(np.mean(np.matrix(trees_sim), axis=0).A1)



ranges = [labels_all,
		  labels_all,
          labels_all
		  ]
list = [average_trees_sim,
		average_svm_sim,
		average_bayes_sim

		]
names = [
		 "Gradient Tree Boosting",
		 "Linear SVM",
		 "Multinomial Naive Bayes"
		 ]




plot_list_latex(ranges, list, names, "Hospital", x_max=600)
plot_list(ranges, list, names, "Hospital", x_max=600, end_of_round=238)
#plot_integral(ranges, list, names, "Hospital", x_max=800, x_min=238)
#plot_integral_latex(ranges, list, names, "Hospital", x_max=800, sorted=False)
#plot_outperform(ranges, list, names, "Hospital", 1.0, x_max=800)





