import numpy as np
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform_latex


labels_optimum = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256]

maxchangeprediction_sim = []
maxchangeprediction_sim.append([0.0, 0.0, 0.0, 0.0, 0.3017205596534146, 0.5388443550829645, 0.6735494375943858, 0.794837886598006, 0.8003326244836646, 0.8135881819746522, 0.8170567098663879, 0.8171701285898315, 0.8400119491393397, 0.85139412680908, 0.8614850785741824, 0.8688565850111774, 0.8771654850952746, 0.8845283801086545, 0.8925755517620113, 0.8905863422797049, 0.8986143605474931, 0.9040698055215689, 0.9079437842937754, 0.9116615106131558, 0.9120680649671522, 0.9141124997539404, 0.91716151375217, 0.9201760733511817])
average_maxchangeprediction_sim = list(np.mean(np.matrix(maxchangeprediction_sim), axis=0).A1)

roundrobin_sim = []
roundrobin_sim.append([0.0, 0.0, 0.0, 0.0, 0.3017205596534146, 0.5388443550829645, 0.6735494375943857, 0.794837886598006, 0.7949627180769888, 0.8079997084156669, 0.8104411033107597, 0.8171701285898317, 0.8187878826785377, 0.8265321616894619, 0.8507106459492231, 0.8645047901077298, 0.8650032599780291, 0.868651923183112, 0.878928971682462, 0.8846958135587567, 0.8849024610002603, 0.8897096682516084, 0.8956785759734018, 0.9009730735959949, 0.9010164238361689, 0.9053136445541566, 0.9077686257756449, 0.9103743111737161])
average_roundrobin_sim = list(np.mean(np.matrix(roundrobin_sim), axis=0).A1)

maxuncertainty_sim = []
maxuncertainty_sim.append([0.0, 0.0, 0.0, 0.0, 0.3017205596534146, 0.5388443550829645, 0.6735494375943857, 0.794837886598006, 0.7993611949445595, 0.8192752096903793, 0.8251260790310315, 0.8287592003441773, 0.8369401757498249, 0.8409649427317907, 0.8649686601393365, 0.8724155257808717, 0.8806418115112831, 0.8862019712453515, 0.8877037562560259, 0.8893091929065624, 0.8953926956841262, 0.8989469049352475, 0.9012490755628845, 0.906199497636474, 0.9086745002641641, 0.9126953579250777, 0.9158308327953366, 0.9183406739813156])
average_maxuncertainty_sim = list(np.mean(np.matrix(maxuncertainty_sim), axis=0).A1)

random_sim = []
random_sim.append([0.0, 0.06911961631820075, 0.21518448227443565, 0.3331210686879743, 0.43055850476927054, 0.5114132399258974, 0.5719327930012993, 0.6351012244757753, 0.6675942374417869, 0.7015571561776087, 0.7333850450238767, 0.765611938117249, 0.7871551186725203, 0.8019343652101877, 0.8155103913579967, 0.8288760133461637, 0.8379316419969818, 0.8461505037707068, 0.8575438234071521, 0.8646366405038428, 0.8713346912896924, 0.8792596332171599, 0.8841210189197198, 0.8879078232398246, 0.8906894057400909, 0.8941165705217132, 0.8969330317686061, 0.8997968694591674])
average_random_sim = list(np.mean(np.matrix(random_sim), axis=0).A1)

mincross_sim = []
mincross_sim.append([0.0, 0.0, 0.0, 0.0, 0.3017205596534146, 0.5388443550829645, 0.6735494375943858, 0.794837886598006, 0.8004649600692652, 0.8029662097653049, 0.823773522888437, 0.8297213161331957, 0.8465711441996835, 0.8496439163444295, 0.8571826248435194, 0.8702402124181564, 0.8742401022218174, 0.8800735481858176, 0.8854920300802551, 0.8891846720838892, 0.8948505436377656, 0.899267971138568, 0.900516799933955, 0.9025542459207682, 0.9047639494708914, 0.9077692038778228, 0.9098877366662096, 0.9126982283709039])
average_mincross_sim = list(np.mean(np.matrix(mincross_sim), axis=0).A1)



ranges = [labels_optimum,
		  labels_optimum,
		  labels_optimum,
		  labels_optimum,
		  labels_optimum
		  ]
list = [average_maxuncertainty_sim,
		average_maxchangeprediction_sim,
		average_roundrobin_sim,
		average_random_sim,
		average_mincross_sim
		]
names = [
		 "Min certainty (MC)",
		 "Max prediction change (MPC)",
	     "Round-robin (RR)",
		 "Random (RA)",
	     "Max error (ME)"
		 ]


plot_list(ranges, list, names, "Flights", x_max=200, end_of_round=56)
plot_list_latex(ranges, list, names, "Flights", x_max=200)
#plot_integral(ranges, list, names, "Flights", x_max=200,x_min=56, sorted=True)
#plot_end(ranges, list, names, "Flights", x_max=200,x_min=56, sorted=True)
#plot_outperform(ranges, list, names, "Flights", 0.7366, x_max=200)

#plot_outperform(ranges, list, names, "Flights", 0.9, x_max=200)