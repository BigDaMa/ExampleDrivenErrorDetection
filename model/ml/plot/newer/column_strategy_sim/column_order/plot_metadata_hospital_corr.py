import numpy as np
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform_latex


labels_optimum = [4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 78, 88, 98, 108, 118, 128, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 238, 248, 258, 268, 278, 288, 298, 308, 318, 328, 338, 348, 358, 368, 378, 388, 398, 408, 418, 428, 438, 448, 458, 468, 478, 488, 498, 508, 518, 528, 538, 548, 558, 568, 578, 588, 598, 608, 618, 628, 638, 648, 658, 668, 678, 688, 698, 708, 718, 728, 738, 748, 758, 768, 778, 788, 798, 808, 818, 828, 838]


maxchangeprediction_sim = []
maxchangeprediction_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007020604482861929, 0.012008149772717, 0.014151249498669777, 0.019114089573550354, 0.045310844926372475, 0.05254358254577969, 0.05755593328172466, 0.06390711444838999, 0.06845102567219524, 0.08121533263640202, 0.11313108669514076, 0.149682441503678, 0.15106575503526426, 0.15190448197972292, 0.15258060132700205, 0.1530210841723744, 0.1549571500029006, 0.3234281117531675, 0.3461013529351343, 0.38939171573984177, 0.3976710488495947, 0.41789880143002217, 0.44243821210161133, 0.4562681857950744, 0.4820397968532991, 0.4968957682485177, 0.5172504892693464, 0.5384682905073934, 0.5713765520358945, 0.5921591450656115, 0.6035402999511803, 0.6227110989282297, 0.6355544164041522, 0.6463515861411452, 0.6587634312880286, 0.6742691550446611, 0.6748269511809546, 0.6977174577347162, 0.6977174577347162, 0.7017625468724653, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724, 0.7081754582869724])
average_maxchangeprediction_sim = list(np.mean(np.matrix(maxchangeprediction_sim), axis=0).A1)

roundrobin_sim = []
roundrobin_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.045310844926372475, 0.05254358254577969, 0.05755593328172466, 0.06390711444838998, 0.06845102567219524, 0.08121533263640202, 0.11313108669514076, 0.149682441503678, 0.15106575503526432, 0.15190448197972292, 0.15258060132700205, 0.1530210841723744, 0.1549571500029006, 0.17824710302202235, 0.18986605151790378, 0.20794939956167308, 0.22578167342723546, 0.24638605983546458, 0.2718133139359959, 0.29560214562107506, 0.3272085060054885, 0.6233360449435693, 0.6637329014758818, 0.6750077870289533, 0.6849221607959528, 0.6962080462586592, 0.7137765521018867, 0.7177570251939249, 0.7205859448937878, 0.7275518559350386, 0.732166542500077, 0.7404289694564858, 0.7556610274839957, 0.7774662357623744, 0.7774662357623744, 0.7830897767292162, 0.802815593756429, 0.802815593756429, 0.8465105534617743, 0.8465105534617743, 0.8465105534617743, 0.8465105534617743, 0.8683365486337127, 0.8955206930076036, 0.9100990739973943, 0.9149396328217889, 0.9259456099732336, 0.9373885288994799, 0.9466190139258556, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9493148561838437, 0.9523490647736079, 0.9525681555897642, 0.960247673371042, 0.9755376215976701, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956, 0.9858054801024956])
average_roundrobin_sim = list(np.mean(np.matrix(roundrobin_sim), axis=0).A1)

maxuncertainty_sim = []
maxuncertainty_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.045310844926372475, 0.05254358254577969, 0.05755593328172466, 0.06390711444838998, 0.06845102567219524, 0.08121533263640202, 0.11313108669514076, 0.149682441503678, 0.15106575503526432, 0.15190448197972292, 0.15258060132700205, 0.1530210841723744, 0.1549571500029006, 0.3050234551028387, 0.3511357880877969, 0.381976799703264, 0.41134272752216317, 0.4465634758284082, 0.4788285494603784, 0.5292704783322795, 0.5469690028573682, 0.5707627522345027, 0.6057809742389455, 0.6411086607146644, 0.6559901038388741, 0.6778157585391482, 0.6922149664717165, 0.7226910108726236, 0.7401497713281454, 0.7562804369615821, 0.767909966461126, 0.7706345508092928, 0.7742030749931599, 0.7663467185688653, 0.7708361872531377, 0.7731023039639252, 0.7828971057491516, 0.7937039790428779, 0.8002191332105445, 0.8160332873673841, 0.8334929084865786, 0.8392440850225675, 0.8473673405619871, 0.8546246119269114, 0.8603643537004935, 0.8661114481522375, 0.896391010015145, 0.904391948492537, 0.916403432143699, 0.9244121654302451, 0.9292893338508268, 0.934536873724688, 0.9403059149280786, 0.9403059149280786, 0.9404212291026779, 0.9444004613682706, 0.9444004613682706, 0.9459507151753771, 0.9459507151753771, 0.9459507151753771, 0.9459507151753771, 0.9459507151753771, 0.946838104742012, 0.9480408821722085, 0.9499465559619946, 0.9513231789603573, 0.9533897070180004, 0.9533897070180004, 0.9606794266016895, 0.9630069843279074, 0.9630069843279074, 0.964805449812437, 0.964805449812437])
average_maxuncertainty_sim = list(np.mean(np.matrix(maxuncertainty_sim), axis=0).A1)

random_sim = []
random_sim.append([0.0, 0.00043301759133964815, 0.0020236924872091373, 0.0064930781816743945, 0.011010375129510874, 0.018471677888377402, 0.029230093022270212, 0.038733893607825615, 0.049152771099222184, 0.05627007534327646, 0.06813008531133911, 0.08003351453003837, 0.09101372883845338, 0.1061381206729148, 0.11928098720311532, 0.1324306356451762, 0.14447558263116325, 0.16173381157120253, 0.17433988231005013, 0.18916821654987756, 0.19693346047224214, 0.21506339395087742, 0.22951829196854306, 0.24097106027214507, 0.2529098107611559, 0.2646064094963626, 0.2763606712942618, 0.29705544804463674, 0.31808123722826065, 0.3267353018643351, 0.34282430760157373, 0.3562375036211125, 0.36793076317219847, 0.3825525802156174, 0.3861683281902657, 0.39997593955329214, 0.41288568657678026, 0.4263175326428875, 0.43543048421918196, 0.4531959811974261, 0.4621228369095076, 0.47060984088781926, 0.4873325276913147, 0.5018865773732124, 0.5150349304581021, 0.5280422732459352, 0.5459034437607871, 0.5547249384176588, 0.5613522524608965, 0.5717343492187416, 0.5768924654181906, 0.5858316158129807, 0.5966730904061532, 0.6064658395138873, 0.614876207833769, 0.6224967790905565, 0.6326285351635861, 0.6487425147717144, 0.6668815183864215, 0.6761363410066258, 0.6855234362586461, 0.7015278077863882, 0.7088606255265358, 0.716451718869169, 0.7216170750162715, 0.7268605362071494, 0.7329963183198928, 0.7349328148723275, 0.7413209537766094, 0.7531792832315635, 0.7678451750336514, 0.7801351583705706, 0.7951213181431389, 0.7975162141958018, 0.8076560745960386, 0.8147646996039967, 0.8189687651124246, 0.8226264880668418, 0.8267223706227296, 0.8302696804843765, 0.8343208091362855, 0.8442347634076541, 0.8506304952965038, 0.8566005389603315, 0.8594073988717635, 0.8650537212698594, 0.8715703680657763, 0.8736023184321915, 0.8782361352522225, 0.8841198928950394, 0.8870292889225259, 0.8893391215320307, 0.8909659095593082, 0.8982797075115978])
average_random_sim = list(np.mean(np.matrix(random_sim), axis=0).A1)

mincross_sim = []
mincross_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007020604482861929, 0.012008149772717, 0.014151249498669777, 0.019114089573550354, 0.045310844926372475, 0.05254358254577969, 0.05755593328172466, 0.06390711444838999, 0.06845102567219524, 0.08121533263640202, 0.11313108669514076, 0.149682441503678, 0.15106575503526426, 0.15190448197972292, 0.15258060132700205, 0.1530210841723744, 0.1549571500029006, 0.17824710302202235, 0.18869556627694314, 0.1994776472249862, 0.22363281591244272, 0.24385797011226695, 0.26302423416118265, 0.2860067029910725, 0.313345124396121, 0.33418024447655104, 0.3617276331862873, 0.3811976740112375, 0.3959976277312622, 0.4107957666456201, 0.41801117829902346, 0.43490526015822184, 0.43922009431089687, 0.44820010148582606, 0.4559353692118381, 0.46123179701331685, 0.468911718350875, 0.4760093197106423, 0.4833957409585247, 0.490859735196421, 0.5005565563700264, 0.5100078911071847, 0.5124760085120743, 0.5156762535506632, 0.5195957349493474, 0.6209450258455397, 0.7032632745994127, 0.744141959229415, 0.8267384491472288, 0.9199779961959373, 0.973310074882597, 0.9807174822900043, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938, 0.9907441016333938])
average_mincross_sim = list(np.mean(np.matrix(mincross_sim), axis=0).A1)



ranges = [labels_optimum,
		  labels_optimum,
		  labels_optimum,
		  labels_optimum,
		  labels_optimum
		  ]
list = [average_maxuncertainty_sim,
		average_maxchangeprediction_sim,
		average_roundrobin_sim,
		average_random_sim,
		average_mincross_sim
		]
names = [
		 "Min certainty (MC)",
		 "Max prediction change (MPC)",
	     "Round-robin (RR)",
		 "Random (RA)",
	     "Max error (ME)"
		 ]


plot_list(ranges, list, names, "Hospital", x_max=600)
plot_list_latex(ranges, list, names, "Hosital", x_max=600)
#plot_integral(ranges, list, names, "Flights", x_max=200,x_min=56, sorted=True)
#plot_end(ranges, list, names, "Flights", x_max=200,x_min=56, sorted=True)
#plot_outperform(ranges, list, names, "Flights", 0.7366, x_max=200)

#plot_outperform(ranges, list, names, "Flights", 0.9, x_max=200)