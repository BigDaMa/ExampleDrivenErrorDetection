import numpy as np
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_list
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_integral_latex
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform
from ml.plot.newer.column_strategy_sim.plotlatex_lib import plot_outperform_latex


labels_optimum = [4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 74, 84, 94, 104, 114, 124, 134, 144, 154, 164, 174, 184, 194, 204, 214, 224, 234, 244, 254, 264, 274, 284, 294, 304, 314, 324, 334, 344, 354, 364, 374, 384, 394, 404, 414, 424, 434, 444, 454, 464, 474, 484, 494, 504, 514, 524, 534, 544, 554, 564, 574, 584, 594, 604, 614]

maxchangeprediction_sim = []
maxchangeprediction_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003641820140563278, 0.004886633418571576, 0.007310955943032412, 0.011004438344538592, 0.01697620060697974, 0.02191036597688174, 0.02848732120989212, 0.030397306335853896, 0.0398065851455633, 0.041178528693961464, 0.04975841689253989, 0.05068880046583977, 0.0528812609854701, 0.05523692172740944, 0.05834214698605648, 0.06073679194249619, 0.06346722433932309, 0.06746835333544567, 0.07898826830693914, 0.08539869122956492, 0.09523894668336615, 0.10355260659619403, 0.10775250325218326, 0.11643937223152061, 0.12009230376326155, 0.12475525788370787, 0.1304683793460688, 0.1395312742478307, 0.1464566091594673, 0.15114334935542426, 0.16150601981998708, 0.16837472910442092, 0.17479800166861187, 0.18024262009992273, 0.18745879784119357, 0.19401170696638392, 0.19790663331769376, 0.20387191408427804, 0.20670863114517118, 0.20860739993325478, 0.2145057682876605, 0.21772717805631864, 0.22329295238175387, 0.2297788701775299, 0.23376081479397479, 0.2377583333992091, 0.2392265495753342, 0.24154102856828033, 0.24345390798466107, 0.25048163189052525, 0.25295044204621064, 0.2550179212198166, 0.2578818656232117, 0.2599287915506911, 0.26272011355248565])
average_maxchangeprediction_sim = list(np.mean(np.matrix(maxchangeprediction_sim), axis=0).A1)

roundrobin_sim = []
roundrobin_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.028487321209892114, 0.030397306335853896, 0.0398065851455633, 0.041178528693961464, 0.04975841689253989, 0.050688800465839776, 0.052881260985470115, 0.05523692172740944, 0.05834214698605648, 0.06073679194249619, 0.06776924765352145, 0.07636967634557476, 0.08285312692380165, 0.08924341685160261, 0.09736446485562583, 0.1015524971006101, 0.1073369556818442, 0.11552997115965195, 0.12099765534828907, 0.12393712848624694, 0.12874290289128168, 0.13271562299401451, 0.13673958033254408, 0.13829336487544167, 0.14091761093518546, 0.14295880008795844, 0.1469559541543688, 0.14955968552784268, 0.15265014652432374, 0.15652624496870465, 0.16290917151548662, 0.1667503086217911, 0.17382358255434588, 0.1800509461762888, 0.18917675370963688, 0.1936963081226229, 0.20141552704878735, 0.20815243152290125, 0.21597582431822032, 0.22033926212862792, 0.21957420068961692, 0.2307109072528119, 0.2364571238475818, 0.2413946978020634, 0.24385851368248285, 0.2466323990444515, 0.27971018091588973, 0.28471320812859835, 0.2919999882966785])
average_roundrobin_sim = list(np.mean(np.matrix(roundrobin_sim), axis=0).A1)

maxuncertainty_sim = []
maxuncertainty_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.028487321209892114, 0.030397306335853896, 0.0398065851455633, 0.041178528693961464, 0.04975841689253989, 0.050688800465839776, 0.052881260985470115, 0.05523692172740944, 0.05834214698605648, 0.06073679194249619, 0.06424859800377461, 0.0661506810271201, 0.07198024405485297, 0.07579052218441612, 0.0819402971982907, 0.0867992106808797, 0.09300871393493251, 0.10209004353581826, 0.105580241734841, 0.1136276500762455, 0.12162208134751935, 0.1266002178057482, 0.13452521140961687, 0.1363866007653295, 0.1414984192082907, 0.14578106025505086, 0.15022311836702543, 0.1567626786804598, 0.16526328671974735, 0.17309431642601952, 0.17675914748220967, 0.1809553039414751, 0.18491075587567898, 0.18989713090872382, 0.19303127939310807, 0.19624410861422456, 0.20070438549429434, 0.20446112769729038, 0.21084301468456115, 0.21691564789488452, 0.22392345508706138, 0.22867214684020665, 0.2379501975242994, 0.24534709745136504, 0.2559897844232603, 0.2658085124767636, 0.2715098084117864, 0.27479697490646976, 0.283091590412759])
average_maxuncertainty_sim = list(np.mean(np.matrix(maxuncertainty_sim), axis=0).A1)

random_sim = []
random_sim.append([0.0, 0.00036637455225165726, 0.0004895778376726018, 0.001639305738842917, 0.002733129869730679, 0.0037080044405595957, 0.006275983051747154, 0.007804004950214948, 0.010431822285332865, 0.013908075066214326, 0.016386532627426956, 0.01910031725710199, 0.020722825124528842, 0.02365693576098452, 0.02624286979774453, 0.030121088608794585, 0.033813294458898205, 0.03638758662807383, 0.04032909345898322, 0.04451089835095805, 0.04788332950067363, 0.051789537546663454, 0.05564534312150692, 0.05956840065010857, 0.06427578436906427, 0.06774173590853602, 0.07093971687394035, 0.07609605663482717, 0.0799647540717106, 0.08422071457710939, 0.08837238527965961, 0.09281113109903223, 0.09715624931165646, 0.10079227425420056, 0.10461763244050148, 0.10926664229707306, 0.11362816978933653, 0.11798322599956344, 0.12240641861036596, 0.126998909047425, 0.1309615135051957, 0.13445515664524194, 0.14007909563302356, 0.14464447163379635, 0.15002027800053575, 0.15434973417442224, 0.15851228739307394, 0.16178057922929023, 0.1663253595613488, 0.1704974796510205, 0.1766456282213602, 0.18255353762479082, 0.18748906997754358, 0.1930059228665799, 0.19617058611353858, 0.2013597551231079, 0.2059568734670319, 0.2112146394105767, 0.21677295643708042, 0.2213045399820239, 0.22667236510250033, 0.23179337997200503, 0.23520493318742056, 0.2400295394531965, 0.24415591615578852, 0.2487690923312522, 0.25459741134480496, 0.25986005214378144, 0.2649029332724265, 0.26962977802333876, 0.27429161375909533])
average_random_sim = list(np.mean(np.matrix(random_sim), axis=0).A1)

mincross_sim = []
mincross_sim.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003641820140563278, 0.004886633418571576, 0.007310955943032412, 0.011004438344538592, 0.01697620060697974, 0.02191036597688174, 0.02848732120989212, 0.030397306335853896, 0.0398065851455633, 0.041178528693961464, 0.04975841689253989, 0.05068880046583977, 0.0528812609854701, 0.05523692172740944, 0.05834214698605648, 0.06073679194249619, 0.06776924765352144, 0.07222260592270416, 0.07633715652747049, 0.07810810839900834, 0.08056649464315575, 0.08218868142574721, 0.08506185256447481, 0.08795342138207954, 0.09051317284500479, 0.09219898615749594, 0.09349654050818126, 0.09589501746211763, 0.09774006058745771, 0.09900975055582177, 0.10031491201070226, 0.10189039331315233, 0.10314959507772377, 0.10416753885149595, 0.10759789904154748, 0.10898267092961574, 0.11138283829926672, 0.11301470016497853, 0.11547031979470206, 0.11820201380063688, 0.12087954735942245, 0.12416081084144596, 0.1262584145605283, 0.12954730612652146, 0.13192055498970492, 0.13457481926054837, 0.13538392233320082, 0.13635734571407473, 0.1383485761536535, 0.1375499458363555, 0.1405962822894514, 0.14911375139163013, 0.1495249710741508, 0.15150920796477577, 0.15278267714214191])
average_mincross_sim = list(np.mean(np.matrix(mincross_sim), axis=0).A1)



ranges = [labels_optimum,
		  labels_optimum,
		  labels_optimum,
		  labels_optimum,
		  labels_optimum
		  ]
list = [average_maxuncertainty_sim,
		average_maxchangeprediction_sim,
		average_roundrobin_sim,
		average_random_sim,
		average_mincross_sim
		]
names = [
		 "Min certainty",
		 "Max prediction change",
	     "Round robin",
		 "Random",
	     "Max training error"
		 ]


plot_list(ranges, list, names, "Hospital", x_max=600)
plot_list_latex(ranges, list, names, "Hosital", x_max=600)
#plot_integral(ranges, list, names, "Flights", x_max=200,x_min=56, sorted=True)
#plot_end(ranges, list, names, "Flights", x_max=200,x_min=56, sorted=True)
#plot_outperform(ranges, list, names, "Flights", 0.7366, x_max=200)

#plot_outperform(ranges, list, names, "Flights", 0.9, x_max=200)