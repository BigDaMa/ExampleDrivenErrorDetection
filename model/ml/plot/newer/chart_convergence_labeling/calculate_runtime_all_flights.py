import numpy as np

from ml.datasets.flights.FlightHoloClean import FlightHoloClean
from ml.plot.old.user_effort_all_potential.PlotterLatex import PlotterLatex

data = FlightHoloClean()

label_potential = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286]
fscore_metadata_no_svd_more_data = []
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.3019844693700982, 0.5517146398566308, 0.6819393939392727, 0.8136335209507353, 0.8129854610634996, 0.8224170196000095, 0.8384676145338619, 0.8636178861788035, 0.8638716881534007, 0.8869425148494458, 0.893910608939216, 0.8990408385246227, 0.8884377220586137, 0.8956337602097001, 0.897860314896998, 0.9071071071070146, 0.910703607733707, 0.9108178364327478, 0.9166079871239963])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30139823925407516, 0.515855039637531, 0.6529868868382043, 0.7706678118960443, 0.7891252006420769, 0.7630255697016273, 0.7966925064600301, 0.8155689892883575, 0.8688841419997421, 0.8693620479479327, 0.876720526630616, 0.8844040363671689, 0.893855848759437, 0.8996871333594727, 0.9012019935503657, 0.9018095520618088, 0.910505836575904, 0.9148914891490294, 0.9183389628453579])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30139823925407516, 0.49439494107484433, 0.6458837002161951, 0.7757856992195707, 0.7829875518672614, 0.7611387448407027, 0.8046899105215445, 0.8365269461078603, 0.8370377753414477, 0.8571141882401683, 0.8731759866811539, 0.8785798352296632, 0.8915149166991361, 0.8975962478014304, 0.901596005091496, 0.904836193447541, 0.9119842829076141, 0.9091813389039312, 0.9178055060407987])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30139823925407516, 0.530146367664773, 0.6487291046483975, 0.7788198515043331, 0.7542634066160075, 0.76900085397117, 0.804575786463587, 0.8230745114433681, 0.8375488381658511, 0.8498769483183668, 0.8504663318644261, 0.8494690818237254, 0.8507633191399668, 0.8524049850653935, 0.8665507720626427, 0.8836119037913418, 0.8930894308942743, 0.9024340770790661, 0.9124050632910937])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.3028630562264466, 0.5385368583021306, 0.6793218720153364, 0.8184671458946151, 0.8323114355231008, 0.8336121224047673, 0.8551016301067268, 0.8543318943881716, 0.863203642384217, 0.8651780071624964, 0.8731982452476745, 0.8849774866968285, 0.8904990305133132, 0.9070496611712257, 0.9123409412239918, 0.9117203977101241, 0.91659951651891, 0.9246857717445738, 0.926328502415412])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30257029498024973, 0.5281443576623033, 0.6735290677272837, 0.7967016186500798, 0.7824826586603738, 0.8187157400156841, 0.7981510015409338, 0.8285002491282248, 0.8285543608125565, 0.8444355404187532, 0.873776908023401, 0.8889102625756924, 0.8925143953934663, 0.8939437565985218, 0.8930793529242853, 0.8966772000383162, 0.8979045067457974, 0.8983732057416701, 0.9053283048061135])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30139823925407516, 0.5324566312254267, 0.6035980908088648, 0.7346682042142362, 0.7950912653396967, 0.8071911928086118, 0.8093610852229912, 0.8247897476971477, 0.860357645167741, 0.887587822014011, 0.8880226098820356, 0.8911517548195215, 0.8976347040926098, 0.9003228015259109, 0.9036002360809939, 0.9090017650519362, 0.9104419241297663, 0.9116324535678684, 0.9119515293657223])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.3028630562264466, 0.5169274537696817, 0.660175730230348, 0.7687001084063405, 0.795404074538793, 0.8100890207715284, 0.8432134096484781, 0.848252255989914, 0.8577209797657056, 0.8577209797657056, 0.8728894552405436, 0.875945053774868, 0.8949237518278055, 0.8920246681299699, 0.9059599917508678, 0.9046254604992401, 0.911927735578, 0.917849898580219, 0.9182989952299655])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.2925559604372347, 0.5294983277591202, 0.659394220726614, 0.77416163814437, 0.773993808049758, 0.7843946743729762, 0.8000819756122213, 0.8079203727233291, 0.812321974891798, 0.833980073414013, 0.8601506863455257, 0.8752917300864587, 0.8795575583778154, 0.8872940462954055, 0.8920187793427339, 0.9007134363852681, 0.9078181997436987, 0.9116831683168741, 0.9229374433362965])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30139823925407516, 0.5242003962636852, 0.6691774996963207, 0.8068704631430537, 0.7706363539786071, 0.7968750000000203, 0.8054298642533197, 0.8376421923474916, 0.8381699886399078, 0.8668857847165558, 0.8806441749056088, 0.8864756158872762, 0.9011338770638262, 0.900624194986585, 0.9018663455749658, 0.9048141134257025, 0.9101045296166637, 0.9170497701378598, 0.9236312681412897])


#average_metadata_no_svd_more_data = list(np.mean(np.matrix(fscore_metadata_no_svd_more_data), axis=0).A1)


nadeef_fscore = 0.59098550956688811

openrefine_fscore = 0.7366


dboost_models = ["Gaussian", "Histogram", "Mixture"]
dboost_sizes = [50, 100, 150, 200]
dboost_fscore_all = [
                        # Gaussian
                        [
                            [0.538528896673, 0.538528896673, 0.387106163138, 0.536971350614, 0.538528896673],
                            [0.387106163138, 0.538528896673, 0.538528896673, 0.536971350614, 0.536971350614],
                            [0.536971350614, 0.536971350614, 0.538528896673, 0.538528896673, 0.538528896673],
                            [0.536971350614, 0.538528896673, 0.538528896673, 0.387106163138, 0.538528896673]
                        ],
                        # Histogram
                        [
                            [0.56778474014, 0.56778474014, 0.56778474014, 0.56778474014, 0.50033101622],
                            [0.50033101622, 0.56555613267, 0.56778474014, 0.56778474014, 0.56778474014],
                            [0.56555613267, 0.56555613267, 0.593559042114, 0.56778474014, 0.56555613267],
                            [0.56778474014, 0.56555613267, 0.593559042114, 0.56778474014, 0.56778474014]
                        ],
                        # Mixture
                        [
                            [0.682196339434, 0.682196339434, 0.501574365623, 0.501574365623, 0.682196339434],
                            [0.682196339434, 0.527322985329, 0.501574365623, 0.527322985329, 0.682196339434],
                            [0.682196339434, 0.682196339434, 0.682196339434, 0.682196339434, 0.682196339434],
                            [0.682196339434, 0.554024161987, 0.682196339434, 0.594272844273, 0.682196339434]
                        ]
                    ]

dboost_matrix_f = np.array(dboost_fscore_all)
dboost_avg_f = np.mean(dboost_matrix_f, axis = 2)


PlotterLatex(data, label_potential, fscore_metadata_no_svd_more_data,
         dboost_models, dboost_sizes, dboost_avg_f,
         nadeef_fscore,
         openrefine_fscore,
         None, xmax=200, filename="Flights")