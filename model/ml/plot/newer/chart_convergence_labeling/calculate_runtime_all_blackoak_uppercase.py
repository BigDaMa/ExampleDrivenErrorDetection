import numpy as np

from ml.datasets.blackOak.BlackOakDataSetUppercase import BlackOakDataSetUppercase
from ml.plot.old.user_effort_all_potential.PlotterLatex import PlotterLatex

data = BlackOakDataSetUppercase()

label_potential = [4, 8, 12, 16, 20, 24, 28, 38, 48, 58, 68, 78, 88, 98, 108, 118, 128, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 238, 248, 258, 268, 278, 288, 298, 308, 318, 328, 338, 348, 358, 368, 378, 388, 398, 408, 418, 428, 438, 448, 458, 468, 478, 488, 498, 508, 518, 528, 538, 548, 558, 568]


fscore_metadata_no_svd_absolute_potential = []
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.052210552405753924, 0.5249337181205836, 0.5567886615449846, 0.6979652342426127, 0.8470659864221374, 0.9667621079483928, 0.9667621079483928, 0.9675317638327735, 0.9675317638327735, 0.9739868922659334, 0.9739868922659334, 0.9739868922659334, 0.9842378730499495, 0.9756951220682591, 0.9829854128402086])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.32209236909412925, 0.681590525240263, 0.7768609109091683, 0.8792859598812635, 0.9033680582205875, 0.9655957717091663, 0.9655957717091663, 0.9635131064549401, 0.9688284512051802, 0.9688284512051802, 0.9688284512051802, 0.9688284512051802, 0.9731919976306679, 0.9731919976306679, 0.9834318230150059])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22443468505271233, 0.6351773650474193, 0.6875563552050367, 0.8048735266850391, 0.8709403576890584, 0.8653423225293876, 0.975416909545011, 0.975416909545011, 0.975416909545011, 0.975416909545011, 0.9822161953985165, 0.9822161953985165, 0.9822161953985165, 0.9822161953985165, 0.9825288353527838])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06174238691246983, 0.49745460071419895, 0.5928882922210731, 0.7266158976894951, 0.7591336394631673, 0.8694443147075629, 0.8694443147075629, 0.9825719908846169, 0.9825719908846169, 0.9825719908846169, 0.9825719908846169, 0.9825719908846169, 0.9775177402841783, 0.984035852479039, 0.984035852479039])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12957656984496463, 0.5678323820506577, 0.6422956444547974, 0.7666410799155979, 0.883015129050041, 0.9781395893207678, 0.9655220931050695, 0.9655220931050695, 0.9830459363047463, 0.9830459363047463, 0.9830459363047463, 0.9830459363047463, 0.9853302390735283, 0.9853302390735283, 0.9853302390735283])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2630828751779548, 0.6458923269662522, 0.7070735192365397, 0.8210980576615424, 0.8731910929579465, 0.9656978886958544, 0.9656978886958544, 0.9764324676382162, 0.9764324676382162, 0.9764324676382162, 0.9764324676382162, 0.9764324676382162, 0.9860989799042805, 0.9865218681077791, 0.9822117251196977])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.031039905765063422, 0.5192626658624495, 0.6049212912843679, 0.7372737056847428, 0.8436816967537021, 0.9698201269075398, 0.9698201269075398, 0.9582630114491754, 0.9704314452521547, 0.9704314452521547, 0.9704314452521547, 0.9704314452521547, 0.9734858694134596, 0.9634559888064859, 0.971402864891809])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10547733278766787, 0.5397615166853248, 0.5934070700499663, 0.7241417296812144, 0.7516929308271465, 0.874907052565448, 0.9746661186249519, 0.9746661186249519, 0.9746661186249519, 0.9746661186249519, 0.9835681508683952, 0.9847147748562546, 0.9847147748562546, 0.9847147748562546, 0.9809264305177201])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.037200237787306585, 0.5078365232300762, 0.6742501386716042, 0.7923469657089708, 0.8449217918800853, 0.9055823798968715, 0.9746510002762546, 0.9746510002762546, 0.9577472801866048, 0.9792167215733216, 0.9792167215733216, 0.9792167215733216, 0.9792167215733216, 0.9798138041733363, 0.9798138041733363])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19717746314677245, 0.622223387107476, 0.6864373302952996, 0.8039301062037952, 0.7715247848560755, 0.8402919689177193, 0.8402919689177193, 0.8184466420364137, 0.9423345878044872, 0.9621900652698222, 0.9621967785755637, 0.9640064427298288, 0.9640064427298288, 0.9694085393518495, 0.9694085393518495])


nadeef_fscore = 0.423182139075
openrefine_fscore = 0.904



dboost_models = ["Gaussian", "Histogram", "Mixture"]
dboost_sizes = [50, 100, 150, 200]
dboost_fscore_all = [
                        # Gaussian
                        [
                            [0.250083699413, 0.302852962692, 0.344764768276, 0.163547272239, 0.365227363299],
                            [0.267916665126, 0.344764768276, 0.365227363299, 0.377337212038, 0.377337212038],
                            [0.327354550702, 0.327354550702, 0.327354550702, 0.267916665126, 0.3135756233],
                            [0.298600096273, 0.298600096273, 0.344764768276, 0.371813883318, 0.327354550702]
                        ],
                        # Histogram
                        [
                            [0.146423569755, 0.15840776633, 0.15840776633, 0.128751731214, 0.0407667221922],
                            [0.0340185264113, 0.146423569755, 0.146421653317, 0.146421653317, 0.15840776633],
                            [0.0407667221922, 0.15840776633, 0.146423569755, 0.15840776633, 0.146423569755],
                            [0.15840776633, 0.146421653317, 0.15840776633, 0.15840776633, 0.15840776633]
                        ],
                        # Mixture
                        [
                            [0.212035340615, 0.00631104603318, 0.0193869308278, 0.0548704825712, 0.00631104603318],
                            [0.291690609844, 0.0548704825712, 0.114709605692, 0.0679864045995, 0.00631104603318],
                            [0.396137997093, 0.106538706836, 0.396137997093, 0.109184848579, 0.106538706836],
                            [0.395805130055, 0.396137997093, 0.206868755265, 0.396137997093, 0.438643682948]
                        ]
                    ]

dboost_matrix_f = np.array(dboost_fscore_all)
dboost_avg_f = np.mean(dboost_matrix_f, axis = 2)


PlotterLatex(data, label_potential, fscore_metadata_no_svd_absolute_potential,
         dboost_models, dboost_sizes, dboost_avg_f,
         nadeef_fscore,
         openrefine_fscore,
         None, xmax=200, filename="Address")
