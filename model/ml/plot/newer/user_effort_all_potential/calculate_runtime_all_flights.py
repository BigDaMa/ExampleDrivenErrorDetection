import numpy as np

from ml.datasets.flights.FlightHoloClean import FlightHoloClean
from ml.plot.old.user_effort_all_potential.PlotterLatex import PlotterLatex

data = FlightHoloClean()

label_potential = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286]
fscore_metadata_no_svd_more_data = []
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30198446937014672, 0.54860442733397496, 0.68711943793911012, 0.7890995260663507, 0.78583677998587709, 0.8091209244737928, 0.81836454035755846, 0.83239289446185993, 0.83268969836134032, 0.84840479577321692, 0.81326833403984755, 0.86487034035656407, 0.87884927066450558, 0.88234106962663972, 0.90159104301708903, 0.90510234061306438, 0.90807744963817716, 0.91806202318438512, 0.92788604214066683, 0.93048128342245995, 0.93489712752211518, 0.93699771802758214, 0.94117647058823528, 0.94191995185073729, 0.9473263368315844, 0.94939372682633516, 0.95023720601594841])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30257029498016214, 0.54108108108108111, 0.67662382771795759, 0.78090002036245165, 0.78099888109042825, 0.80192122958693557, 0.80036025217652351, 0.82003528719858843, 0.83574587856855653, 0.84761714056868243, 0.86294012333399639, 0.86877478000193398, 0.8704965920155795, 0.87301275760549557, 0.87826691841399185, 0.89547551280793014, 0.90268123138033773, 0.90590940905909412, 0.91296876579399577, 0.91773855818127426, 0.92182053580320689, 0.92696629213483139, 0.93123066174268887, 0.93216280925778139, 0.93956210271415597, 0.93838670449939188, 0.93719709208400648])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30578512396694213, 0.56453786041498255, 0.70076067875950843, 0.80752169720347156, 0.80752169720347156, 0.79866758107181346, 0.81619498438916316, 0.81950812838682774, 0.822721598002497, 0.83426169206516032, 0.85367153362464021, 0.87408627612478118, 0.87478063383916593, 0.88070539419087135, 0.87830904986661207, 0.8994261552401086, 0.90640987059885647, 0.9117559078671853, 0.91300861896171581, 0.91592920353982299, 0.92044431101771251, 0.92831325301204815, 0.93602490710053221, 0.93997189319413776, 0.9421918908069048, 0.94556734040424251, 0.94939516129032253])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30286305622628495, 0.53038218311795449, 0.67167282809611828, 0.78470743332319226, 0.7865938537316628, 0.80052706263936746, 0.8265756724207145, 0.83803656597774245, 0.8488977955911825, 0.86684888715345565, 0.88137931034482764, 0.8857423795476892, 0.88203592814371257, 0.88589540412044376, 0.89782718544719564, 0.90601236946162422, 0.90663390663390664, 0.91674347158218128, 0.92055356227575602, 0.92384646794610037, 0.93036154478225142, 0.93388849395755058, 0.93388849395755058, 0.93882544861337691, 0.94098527171152868, 0.94391189067917591, 0.94583290829337963])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30139823925427239, 0.54879385964912286, 0.68890955591722869, 0.79975379565038984, 0.80955784744205039, 0.8226479717435512, 0.84332810047095752, 0.85647726121746182, 0.86967845337073024, 0.87812752219531875, 0.88273648309760255, 0.89556739370791039, 0.89546065556819354, 0.89901605385810468, 0.90283695313311862, 0.91324013157894746, 0.91697569015245162, 0.92260316156846645, 0.92646760105626647, 0.93389019048589184, 0.93888775718068862, 0.94348844313206393, 0.94597349643221196, 0.95016207455429491, 0.95218800648298207, 0.95224576700800967, 0.95576651181579486])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30257029498016214, 0.54816039685820594, 0.68186157517899759, 0.79313534066385771, 0.813308302044222, 0.83042496407308553, 0.83047892523843714, 0.84301711388125933, 0.858575308126175, 0.86529447727735886, 0.87232323232323228, 0.88041488712629645, 0.8924006039255159, 0.89405840886203436, 0.89498734177215189, 0.90093004448038816, 0.90428774639300957, 0.90682095006090135, 0.9109789293275532, 0.91454637607704004, 0.91829268292682931, 0.92511732299530702, 0.92800000000000005, 0.93023255813953487, 0.93640218049666868, 0.93858585858585863, 0.94035584310553977])
fscore_metadata_no_svd_more_data.append([0.0, 0.0, 0.0, 0.0, 0.30286305622628495, 0.55655984661736513, 0.67966386554621849, 0.8076522397954351, 0.82203144593421429, 0.84560378688689708, 0.86605128205128212, 0.8746666666666667, 0.88272831886180558, 0.88683085691023811, 0.89430730478589426, 0.89247528747226157, 0.9032911392405063, 0.90657788539144468, 0.90997764681975202, 0.90984771573604051, 0.91629236423029803, 0.9175268267756771, 0.91885295912141551, 0.92307692307692313, 0.91921041921041913, 0.92789968652037613, 0.92512274959083474, 0.93050864804011868, 0.93787251237498737, 0.9418439716312057, 0.94394031054648109])

#average_metadata_no_svd_more_data = list(np.mean(np.matrix(fscore_metadata_no_svd_more_data), axis=0).A1)


nadeef_fscore = 0.59098550956688811

openrefine_fscore = 0.7366


dboost_models = ["Gaussian", "Histogram", "Mixture"]
dboost_sizes = [50, 100, 150, 200]
dboost_fscore_all = [
                        # Gaussian
                        [
                            [0.538528896673, 0.538528896673, 0.387106163138, 0.536971350614, 0.538528896673],
                            [0.387106163138, 0.538528896673, 0.538528896673, 0.536971350614, 0.536971350614],
                            [0.536971350614, 0.536971350614, 0.538528896673, 0.538528896673, 0.538528896673],
                            [0.536971350614, 0.538528896673, 0.538528896673, 0.387106163138, 0.538528896673]
                        ],
                        # Histogram
                        [
                            [0.56778474014, 0.56778474014, 0.56778474014, 0.56778474014, 0.50033101622],
                            [0.50033101622, 0.56555613267, 0.56778474014, 0.56778474014, 0.56778474014],
                            [0.56555613267, 0.56555613267, 0.593559042114, 0.56778474014, 0.56555613267],
                            [0.56778474014, 0.56555613267, 0.593559042114, 0.56778474014, 0.56778474014]
                        ],
                        # Mixture
                        [
                            [0.682196339434, 0.682196339434, 0.501574365623, 0.501574365623, 0.682196339434],
                            [0.682196339434, 0.527322985329, 0.501574365623, 0.527322985329, 0.682196339434],
                            [0.682196339434, 0.682196339434, 0.682196339434, 0.682196339434, 0.682196339434],
                            [0.682196339434, 0.554024161987, 0.682196339434, 0.594272844273, 0.682196339434]
                        ]
                    ]

dboost_matrix_f = np.array(dboost_fscore_all)
dboost_avg_f = np.mean(dboost_matrix_f, axis = 2)


PlotterLatex(data, label_potential, fscore_metadata_no_svd_more_data,
         dboost_models, dboost_sizes, dboost_avg_f,
         nadeef_fscore,
         openrefine_fscore,
         None, xmax=200, filename="Flights")