import numpy as np

from ml.datasets.blackOak.BlackOakDataSetUppercase import BlackOakDataSetUppercase
from ml.plot.old.user_effort_all_potential.PlotterLatex import PlotterLatex

data = BlackOakDataSetUppercase()

label_potential = [4, 8, 12, 16, 20, 24, 28, 38, 48, 58, 68, 78, 88, 98, 108, 118, 128, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 238, 248, 258, 268, 278, 288, 298, 308, 318, 328, 338, 348, 358, 368, 378, 388, 398, 408, 418, 428, 438, 448, 458, 468, 478, 488, 498, 508, 518, 528, 538, 548, 558, 568]

fscore_metadata_no_svd_absolute_potential = []
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22395918574661527, 0.62330265276125152, 0.70819669439804311, 0.82237878408057752, 0.88927520254967007, 0.93889869789644609, 0.97609903086570582, 0.97908880208755411, 0.98028781340506099, 0.98340168566538577, 0.98340168566538577, 0.98340168566538577, 0.98405721691298864, 0.98405721691298864, 0.98405721691298864, 0.98406378364752234, 0.98407691686192134, 0.98328629644220278, 0.98329614548789279, 0.98409671883735739, 0.98410328501947086, 0.98411641712906262, 0.98605896393781056, 0.98605896393781056, 0.98605896393781056, 0.98605896393781056, 0.98610474980163465, 0.98610802006225096, 0.98610802006225096, 0.98618323023434318, 0.98619295037396115, 0.98619295037396115, 0.98696937173871702, 0.98698896140520509, 0.98698896140520509, 0.98701181505855962, 0.98701181505855962, 0.98797725531106517, 0.98865131843557441, 0.97431913031344741, 0.98863504730034113, 0.98863504730034113, 0.98866477263586672, 0.98866477263586672, 0.98867084310678233, 0.98867084310678233, 0.98869362093707169, 0.98869362093707169, 0.98869362093707169, 0.98869362093707169, 0.98869362093707169])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.095439071730468061, 0.55862564205769483, 0.67160391832880917, 0.79190241808117512, 0.90964690871772114, 0.90964690871772114, 0.97144221554242127, 0.97586197920056228, 0.96922382759370651, 0.97597442133812606, 0.97597442133812606, 0.973995749618639, 0.97655926932907866, 0.97655926932907866, 0.97655926932907866, 0.97656260175308363, 0.97656926653598941, 0.97658259584139206, 0.97551646979237139, 0.97659259259259268, 0.9766025891484984, 0.9766025891484984, 0.97662924567618259, 0.97662924567618259, 0.97659426919357839, 0.97659426919357839, 0.97659426919357839, 0.9766118425336302, 0.9706555237714013, 0.97592009539684244, 0.97599074717834433, 0.97600738134456122, 0.97601226674983099, 0.97588228606694483, 0.97625000811799001, 0.97629577675167722, 0.98158359741698731, 0.98648157733148589, 0.98709142662545868, 0.98709142662545868, 0.98726270195236687, 0.98726912843977732, 0.98726912843977732, 0.98728181794812475, 0.98728181794812475, 0.98728181794812475, 0.9876426618869113, 0.9876426618869113, 0.98798407295613633, 0.9879873226275685, 0.98803204726811489])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1172289171044601, 0.57301939234009369, 0.69560462322382866, 0.81171930115782043, 0.81188163644184841, 0.91853232333999246, 0.90657567600006861, 0.91699612881970172, 0.97075992860475824, 0.9751991210310279, 0.9751991210310279, 0.97643580090922122, 0.97585805133011794, 0.97643626132433681, 0.97643990139602133, 0.97644626080726837, 0.97645262030135171, 0.97645262030135171, 0.96648746387691509, 0.9769518664366843, 0.9769518664366843, 0.97697850155234012, 0.97698848936315619, 0.97698848936315619, 0.97698848936315619, 0.97703509656844401, 0.97705189032287454, 0.97706247376453326, 0.9770656531472901, 0.97707519141971111, 0.97710499941428375, 0.97711150737351793, 0.97744801137195314, 0.97749457612453938, 0.97749457612453938, 0.9786481955580969, 0.97866478666411083, 0.97882030392214192, 0.97418304380329701, 0.97418304380329701, 0.98898490691040319, 0.98898490691040319, 0.98901416966289968, 0.98917995993530483, 0.98935219418099984, 0.98933656526169944, 0.98935930819429707, 0.98943057546787716, 0.9895475086943385, 0.98956036538721148, 0.98957010847730009])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17127837958584516, 0.60938892565629821, 0.65454205829661138, 0.77718016189645722, 0.76510516543390261, 0.77320866548737621, 0.86593649959895236, 0.9708073166308262, 0.9708073166308262, 0.97428218957811852, 0.97428218957811852, 0.97644323451258275, 0.97644323451258275, 0.97644687439961186, 0.97644687439961186, 0.97645354043537025, 0.97646369260827082, 0.97651035120509, 0.97645542091795212, 0.97645859988735551, 0.97646193214004329, 0.97688982631565235, 0.97721046158251279, 0.9773263361324307, 0.97813450885542641, 0.97813953639564033, 0.98831775700934577, 0.98831775700934577, 0.98833373561831206, 0.98848629167202995, 0.97542983492813851, 0.9881532966626696, 0.98818529318154791, 0.98831737425196831, 0.98831737425196831, 0.98832712321726846, 0.98832712321726846, 0.98832712321726846, 0.98842460253733744, 0.98842460253733744, 0.98842460253733744, 0.9878413599188568, 0.98786371150235108, 0.98816201377406043, 0.98681112843112728, 0.98681437813322892, 0.98887145924678221, 0.98887145924678221, 0.98890063934631756, 0.989196349909648, 0.98924184939875259])
fscore_metadata_no_svd_absolute_potential.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19364946371081129, 0.6077379172018228, 0.65609825400662425, 0.77847976840733801, 0.86217175403711521, 0.86690141604952031, 0.96996360017807093, 0.96996360017807093, 0.97228426263338685, 0.98006043465221049, 0.9813200417832687, 0.98382843403397202, 0.98382843403397202, 0.98382843403397202, 0.98382843403397202, 0.98382843403397202, 0.98383828590818745, 0.98288975839047499, 0.98289632551863071, 0.98291296361458769, 0.98295104195251082, 0.98373229857613187, 0.98364066316047916, 0.9837330343787053, 0.98378546021961844, 0.98393168137361031, 0.98645681881925118, 0.98647271976994599, 0.98667027713573741, 0.98667027713573741, 0.9866930570509389, 0.9866930570509389, 0.98672211208355498, 0.98674179541813456, 0.98675133776029911, 0.9869538033144043, 0.9869538033144043, 0.98836243796625878, 0.98858327005006885, 0.98860952552560277, 0.98860952552560277, 0.988684587294693, 0.98872984772586148, 0.98873302876262781, 0.98875218778956031, 0.98536876296626452, 0.98818451300859744, 0.98818451300859744, 0.98818451300859744, 0.98818776254769214, 0.98818776254769214])

nadeef_fscore = 0.423182139075
openrefine_fscore = 0.904



dboost_models = ["Gaussian", "Histogram", "Mixture"]
dboost_sizes = [50, 100, 150, 200]
dboost_fscore_all = [
                        # Gaussian
                        [
                            [0.250083699413, 0.302852962692, 0.344764768276, 0.163547272239, 0.365227363299],
                            [0.267916665126, 0.344764768276, 0.365227363299, 0.377337212038, 0.377337212038],
                            [0.327354550702, 0.327354550702, 0.327354550702, 0.267916665126, 0.3135756233],
                            [0.298600096273, 0.298600096273, 0.344764768276, 0.371813883318, 0.327354550702]
                        ],
                        # Histogram
                        [
                            [0.146423569755, 0.15840776633, 0.15840776633, 0.128751731214, 0.0407667221922],
                            [0.0340185264113, 0.146423569755, 0.146421653317, 0.146421653317, 0.15840776633],
                            [0.0407667221922, 0.15840776633, 0.146423569755, 0.15840776633, 0.146423569755],
                            [0.15840776633, 0.146421653317, 0.15840776633, 0.15840776633, 0.15840776633]
                        ],
                        # Mixture
                        [
                            [0.212035340615, 0.00631104603318, 0.0193869308278, 0.0548704825712, 0.00631104603318],
                            [0.291690609844, 0.0548704825712, 0.114709605692, 0.0679864045995, 0.00631104603318],
                            [0.396137997093, 0.106538706836, 0.396137997093, 0.109184848579, 0.106538706836],
                            [0.395805130055, 0.396137997093, 0.206868755265, 0.396137997093, 0.438643682948]
                        ]
                    ]

dboost_matrix_f = np.array(dboost_fscore_all)
dboost_avg_f = np.mean(dboost_matrix_f, axis = 2)


PlotterLatex(data, label_potential, fscore_metadata_no_svd_absolute_potential,
         dboost_models, dboost_sizes, dboost_avg_f,
         nadeef_fscore,
         openrefine_fscore,
         None, xmax=200, filename="Address")
