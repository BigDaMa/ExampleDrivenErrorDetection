import matplotlib.pyplot as plt
import numpy as np

def get_label(list_of_lists, labels):
    new_list = []
    min = -1
    for l in list_of_lists:
        if min == -1 or len(l) < min:
            min = len(l)

    for i in range(len(list_of_lists)):
        new_list.append(list_of_lists[i][0:min])

    return new_list, labels[0:min]

def plot_list(ranges, list_series, list_names):
    fig = plt.figure()
    ax = plt.subplot(111)

    for i in range(len(list_series)):
        ax.plot(ranges[i], list_series[i], label=list_names[i])

    ax.set_ylabel('fscore')
    ax.set_xlabel('labels')

    ax.legend(loc=4)

    plt.show()


def plot_real_stats(ranges, list_all, list_names):
    fig = plt.figure()
    ax = plt.subplot(111)

    print list_names

    for i in range(len(list_all)):
        mins = np.min(np.matrix(list_all[i]), axis=0).A1
        maxes = np.max(np.matrix(list_all[i]), axis=0).A1
        means = np.mean(np.matrix(list_all[i]), axis=0).A1
        std = np.std(np.matrix(list_all[i]), axis=0).A1

        print len(std)
        print len(means)
        print len(ranges[i])
        print list_names[i]

        # create stacked errorbars:
        ax.errorbar(ranges[i], means, std, label=list_names[i])
        ax.errorbar(ranges[i], means, [means - mins, maxes - means], fmt='.k', ecolor='gray', lw=1)

    ax.set_ylabel('fscore')
    ax.set_xlabel('labels')

    ax.legend(loc=4)

    plt.show()

fscore_stop = []
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29816672431684538, 0.54610514726121662, 0.68337242315763491, 0.77904901857877618, 0.78237202972888098, 0.79005181347150255, 0.80545305453054528, 0.80865332612222818, 0.8083955425727577, 0.82007656316461075, 0.80960761983642204, 0.81281302170283809, 0.82123856139604168, 0.84010068950421368, 0.86444301902929221, 0.87357774968394442, 0.88644155844155847])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29289399234481611, 0.51759610178668114, 0.65783770768119432, 0.77280397022332492, 0.78094272681196153, 0.80062487795352477, 0.8010825439783491, 0.80296735905044503, 0.80481072555205047, 0.80887405516835176, 0.82086211929551423, 0.83179933245676141, 0.83838996763754048, 0.83672211953173137, 0.84740833073647026, 0.8495972264708882, 0.84971451876019566])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.30490956072351416, 0.51809052139221357, 0.66941048299237382, 0.77072365025291634, 0.77110423116615079, 0.7996388080666198, 0.80773102476343883, 0.81940481043620061, 0.81940481043620061, 0.82586259233026416, 0.83218344155844159, 0.83845153546063822, 0.83720930232558133, 0.83970394403325554, 0.84212725942952671, 0.85362545644235788, 0.86154166233225848])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29728326700121127, 0.52980861902794985, 0.67438741923686463, 0.77843820455011281, 0.78255540802778056, 0.80660236651088801, 0.78145304193738929, 0.78844822470576592, 0.78808864265927991, 0.79572400388726927, 0.82840003933523443, 0.83083891295785739, 0.83139129568768055, 0.84053354568982674, 0.85042481722979646, 0.85069306930693078, 0.85148514851485158])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29816672431684538, 0.54610514726121662, 0.68337242315763491, 0.77904901857877618, 0.78237202972888098, 0.79005181347150255, 0.80545305453054528, 0.80865332612222818, 0.8083955425727577, 0.82007656316461075, 0.80960761983642204, 0.81281302170283809, 0.82123856139604168, 0.84010068950421368, 0.86444301902929221, 0.87357774968394442, 0.88644155844155847])

average_stop = list(np.mean(np.matrix(fscore_stop), axis=0).A1)
label_stop = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186]



fscore_0 = []
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.3022774327122153, 0.49671676637968776, 0.65743690271992161, 0.75257944696657042, 0.75283680627192073, 0.78949889815080954, 0.79103877838055048, 0.79462532299741595, 0.79586990191017037, 0.79917184265010344, 0.81055742382553764, 0.83308149491286387, 0.8330145948666331, 0.8419377300308365, 0.85089463220675954, 0.84464431725265743, 0.84507618365886072, 0.8459251665812404, 0.8491414554374489, 0.87017048320387369])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.29846100639806333, 0.50698602794411185, 0.65282201554338126, 0.76877339792997135, 0.77080356161371877, 0.79118253882071887, 0.79237104464672736, 0.79590737749057605, 0.7972027972027973, 0.81930693069306926, 0.82510096303199754, 0.82014853083629313, 0.819686223941543, 0.82251725969198086, 0.8320016820857864, 0.84796573875803005, 0.84891792568395263, 0.84415449932691322, 0.84934903905765646, 0.85723108594956254])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.54260338606716629, 0.68801780635587984, 0.78817226457861123, 0.78867147270854787, 0.779789301421704, 0.78847687400318978, 0.78198236938292842, 0.77548853016142738, 0.79768786127167635, 0.80979403110550652, 0.79982882208195138, 0.80834955656500107, 0.81518116331577262, 0.82387932865944347, 0.84141519250780439, 0.84153574029757572, 0.84974629802216006, 0.85770423991726996, 0.86868480261812231])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.29757785467128028, 0.53098071399261382, 0.66875527171948423, 0.77243655869610051, 0.77471169686985175, 0.76800858829844343, 0.78049823586015177, 0.76914539400665927, 0.77050997782705111, 0.80356581017304651, 0.81378438191590263, 0.83398170539375471, 0.83398170539375471, 0.84032904450537871, 0.85134993171551643, 0.86114469971785568, 0.86114469971785568, 0.87170227705888248, 0.87019854335029434, 0.8738848337388484])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.54760269267756556, 0.65843113032736245, 0.77013054830287198, 0.77062689058099509, 0.77226277372262764, 0.79710872402369237, 0.78118348233290757, 0.76559900166389339, 0.78348846620801282, 0.79302108214767897, 0.80519480519480513, 0.82020583910943079, 0.82535034511608452, 0.83696437790397527, 0.85085771947527744, 0.8539894694208181, 0.86012992285830281, 0.86458439312239288, 0.87733549959382606])

average_0 = list(np.mean(np.matrix(fscore_0), axis=0).A1)
label_0 = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216]

# change < 0.001 and certainty > 0.4:
fscore_stop_001_04 = []
fscore_stop_001_04.append([0.0, 0.0, 0.0, 0.0, 0.29963711767755313, 0.5446280991735537, 0.69262931549396722, 0.79745845552297168, 0.79875012205839269, 0.79753381066030227, 0.80452507134121476, 0.79423822714681447, 0.79463890119627834, 0.81837652602270294, 0.82701046179858395, 0.82730666666666663, 0.82730666666666663, 0.83405240450384088, 0.83640966142811934, 0.8484784889821616, 0.8475468519688355, 0.85979359949963519, 0.86316659776767257])
fscore_stop_001_04.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.55893074119076547, 0.68770764119601335, 0.78916907813145931, 0.78963666391412046, 0.78100487598049595, 0.73808719161879011, 0.72419317921721216, 0.72562929061784898, 0.74534435261707987, 0.81158820486290728, 0.82338125721481792, 0.82387496066296029, 0.82766656074568368, 0.84093763080786943, 0.85150764147046676, 0.85150764147046676, 0.86907679738562094, 0.87748583204533748, 0.88262131895479046])
fscore_stop_001_04.append([0.0, 0.0, 0.0, 0.0, 0.29934324230902176, 0.56537289707245986, 0.69703491152558583, 0.78062023598204033, 0.78211941231634885, 0.78780437896459998, 0.78874104401228251, 0.78954578986194546, 0.78532608695652184, 0.78671694950764715, 0.79975046787273851, 0.8063847429519071, 0.81253263707571799, 0.81722885313959515, 0.82216100397918568, 0.82660917770249465, 0.8272476219699294, 0.83419474881124667, 0.8355992470194521, 0.85183673469387766])
fscore_stop_001_04.append([0.0, 0.0, 0.0, 0.0, 0.30110497237569062, 0.52737150020894275, 0.67228327228327234, 0.78870655386810717, 0.78941475826972018, 0.79075144508670525, 0.80498012136430208, 0.80209013716525157, 0.80199739470256193, 0.82142487850274015, 0.82359027418520425, 0.83160884560762827, 0.83338416183795883, 0.83311271764586092, 0.84307692307692317, 0.85693246370713239, 0.85693246370713239, 0.86942940441482719, 0.87892192161300275, 0.87701407301652057])
fscore_stop_001_04.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.53871499176276783, 0.67643798497351892, 0.77716428794666115, 0.77765060867755698, 0.78273591806876386, 0.78544383676903651, 0.79053254437869813, 0.78928762720942691, 0.80891318057599337, 0.82417582417582425, 0.83108248493662995, 0.83423686405337794, 0.83557394002068253, 0.82634358496427451, 0.83127485869792761, 0.83127485869792761, 0.83825686151267553, 0.848744769874477, 0.85355648535564843])

new_list_001_04,label_stop_001_04 = get_label(fscore_stop_001_04, label_0)
average_stop_001_04 = list(np.mean(np.matrix(new_list_001_04), axis=0).A1)

#plot_real_stats([label_stop, label_stop_001_04, label_0],[new_list_001_04],[ "stop:change < 0.001, cert>0.4"])


ranges = [label_stop, label_stop_001_04, label_0]
list = [average_stop, average_stop_001_04, average_0]
names = ["stop:change < 0.01, cert>0.7", "stop:change < 0.001, cert>0.4", "full round robin"]

list_real = [fscore_stop, new_list_001_04, fscore_0]

plot_real_stats(ranges, list_real, names)

#plot_list(ranges, list, names)