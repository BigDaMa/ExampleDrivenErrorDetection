import matplotlib.pyplot as plt
import numpy as np

def get_label(list_of_lists, labels):
    new_list = []
    min = -1
    for l in list_of_lists:
        if min == -1 or len(l) < min:
            min = len(l)

    for i in range(len(list_of_lists)):
        new_list.append(list_of_lists[i][0:min])

    return new_list, labels[0:min]

def plot_list(ranges, list_series, list_names):
    fig = plt.figure()
    ax = plt.subplot(111)

    for i in range(len(list_series)):
        ax.plot(ranges[i], list_series[i], label=list_names[i])

    ax.set_ylabel('fscore')
    ax.set_xlabel('labels')

    ax.legend(loc=4)

    plt.show()


def plot_real_stats(ranges, list_all, list_names):
    fig = plt.figure()
    ax = plt.subplot(111)

    print list_names

    for i in range(len(list_all)):
        mins = np.min(np.matrix(list_all[i]), axis=0).A1
        maxes = np.max(np.matrix(list_all[i]), axis=0).A1
        means = np.mean(np.matrix(list_all[i]), axis=0).A1
        std = np.std(np.matrix(list_all[i]), axis=0).A1

        print len(std)
        print len(means)
        print len(ranges[i])
        print list_names[i]

        # create stacked errorbars:
        ax.errorbar(ranges[i], means, std, label=list_names[i])
        ax.errorbar(ranges[i], means, [means - mins, maxes - means], fmt='.k', ecolor='gray', lw=1)

    ax.set_ylabel('fscore')
    ax.set_xlabel('labels')

    ax.legend(loc=4)

    plt.show()

fscore_potential = []
fscore_potential.append([0.0, 0.30198446937014672, 0.30347915949018256, 0.30347915949018256, 0.53712904525312211, 0.56918068366793273, 0.56918068366793273, 0.69434860202260562, 0.67430242475935176, 0.67430242475935176, 0.77837837837837842, 0.77190721649484528, 0.80304329189884271, 0.81715863240603115, 0.81494774622611643, 0.82031501125040185, 0.84141156462585021, 0.85623139089749034, 0.86877731585118867, 0.87636402161245897, 0.878329426805881, 0.87333046100818612, 0.87748736151446705, 0.88522836667023219, 0.89485364049455773, 0.89579831932773113, 0.90079865489701549, 0.90054553084347466, 0.90473199329983245, 0.9151697643027723, 0.91505154639175257, 0.91998757892557703, 0.92455958549222794, 0.92776919113858836])
fscore_potential.append([0.0, 0.2978723404255319, 0.30578512396694213, 0.30578512396694213, 0.56066054068451199, 0.56438727149627632, 0.56438727149627632, 0.6940628359813642, 0.71212479319309852, 0.71212479319309852, 0.80725671140939592, 0.82879841112214492, 0.81910460519286243, 0.81580387435701007, 0.82165393556957811, 0.81806079431994672, 0.8232407717185235, 0.83462132921174648, 0.8475722858701582, 0.8548317515099223, 0.85411764705882354, 0.85849666164118033, 0.86584450402144775, 0.87323345021783028, 0.88481675392670156, 0.89166754229273937, 0.89624908577996032, 0.8975619964423982, 0.8975619964423982, 0.89769874476987443, 0.9045278678239046, 0.90751203180581708, 0.91154485049833889, 0.92549343804898199])
fscore_potential.append([0.0, 0.29934324230902176, 0.30347915949018256, 0.30347915949018256, 0.5471258060090548, 0.58685508598853486, 0.58685508598853486, 0.72271105826397142, 0.73207194580705448, 0.73207194580705448, 0.81288311688311699, 0.82837930026313222, 0.83334954762136382, 0.84024577572964665, 0.85350318471337572, 0.85734072022160668, 0.855288125436932, 0.85192211682476282, 0.85191882660237084, 0.85257512900941002, 0.85789580377052499, 0.86177370030581046, 0.87548400244548608, 0.88027527578180353, 0.88147997560479785, 0.89171068671271836, 0.89553152417873905, 0.89852116267210613, 0.9056719468574348, 0.91109735973597372, 0.914572864321608, 0.91700903861955618, 0.92486142475877653, 0.92699525675396988])
fscore_potential.append([0.0, 0.29728326700121127, 0.30286305622628495, 0.30286305622628495, 0.54392729275681628, 0.52894438138479005, 0.52894438138479005, 0.67179169249845017, 0.68365180467091302, 0.68365180467091302, 0.79208123910144623, 0.79888983774551681, 0.80282141712087207, 0.8123741921813753, 0.81345697649342252, 0.81926665220221306, 0.83403520138214016, 0.84222886421861654, 0.85361216730038025, 0.85154941373534343, 0.86229680125852126, 0.86460066555740434, 0.86814690097863834, 0.87060803702924461, 0.87129344244871931, 0.87839983066991223, 0.88066977532852908, 0.88460724116027956, 0.90489737858158914, 0.90873983739837394, 0.9183025976601229, 0.92155076424739346, 0.93067521538769782, 0.93267882187938289])
fscore_potential.append([0.0, 0.30139823925427239, 0.30347915949018256, 0.30347915949018256, 0.54763877381938697, 0.55411732305150097, 0.55411732305150097, 0.66395463510848129, 0.69241109617499697, 0.69241109617499697, 0.77198697068403899, 0.78534140739193981, 0.79280409998954093, 0.80594262295081964, 0.81319127346524622, 0.82487360970677448, 0.82960274248840493, 0.83674897530740777, 0.85618860510805506, 0.85893354556307211, 0.86255735088769203, 0.86371859296482412, 0.86982009298564789, 0.86656394453004626, 0.87557509457110727, 0.87782898105478746, 0.88477575511034268, 0.88819247877072383, 0.89877641824249155, 0.91299435028248588, 0.92312404287902006, 0.92508746655690466, 0.92939244663382581, 0.93291255217347047])

average_potential = list(np.mean(np.matrix(fscore_potential), axis=0).A1)
label_potential = [4, 14, 24, 28, 38, 48, 52, 62, 72, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286, 296, 306, 316]


fscore_potential2 = []
fscore_potential2.append([0.0, 0.30139823925427239, 0.30139823925427239, 0.53888813742729613, 0.53888813742729613, 0.6747690811861935, 0.6747690811861935, 0.7675607974115437, 0.78424350940017895, 0.76072186836518041, 0.76136965970528991, 0.76383724636141492, 0.76031587142698243, 0.76390878043406418, 0.80597014925373145, 0.80665626625065001, 0.81836902800658984, 0.8288213244481466, 0.83528673084972793, 0.83685023160061756, 0.84967046762213616, 0.85067202878611503, 0.85823510672188608, 0.86222222222222222, 0.87430780482708181, 0.8761544920235097, 0.87905419543837637, 0.88286196707471498, 0.89073684210526316, 0.89015151515151514, 0.89717466652662525, 0.90191562859834606, 0.90619469026548682, 0.91312500000000008])
fscore_potential2.append([0.0, 0.30257029498016214, 0.30257029498016214, 0.53270509977827041, 0.53270509977827041, 0.64183954011497135, 0.64183954011497135, 0.75031472933277377, 0.7473033825531471, 0.759064935064935, 0.786321243523316, 0.7864168133347138, 0.78927364864864868, 0.79211884943630806, 0.80925096364204596, 0.81531578399750293, 0.83134479271991912, 0.84627000906070682, 0.85852694018783993, 0.86462625073572696, 0.86470995157624264, 0.86325802615933411, 0.86491297468354422, 0.87027134085957614, 0.88050930460332999, 0.88427474906514469, 0.88849417801460417, 0.8933959436507144, 0.89748396645288608, 0.90137204215549827, 0.90681502086230881, 0.90883813306852035, 0.91118388409248785, 0.91345772131798331])
fscore_potential2.append([0.0, 0.29846100639806333, 0.29846100639806333, 0.54191947049089906, 0.54191947049089906, 0.67943648047454275, 0.67943648047454275, 0.78842008007391451, 0.80546282245827006, 0.80686521958606761, 0.80884901620960337, 0.82079316171354733, 0.82773236451710563, 0.82259093809827699, 0.84381640458988527, 0.84493467551938317, 0.85219251336898405, 0.85109100585417774, 0.85871520795851408, 0.86571248158282466, 0.87553468961919678, 0.88044715867922574, 0.89112571898110104, 0.89472599917593743, 0.90210148641722188, 0.91014907085971009, 0.90753389744112556, 0.91242821985233802, 0.91486736582356576, 0.92111272576292302, 0.92523656025787659, 0.92738008909147407, 0.92980269989615794, 0.93162038955656856])
fscore_potential2.append([0.0, 0.3022774327122153, 0.3022774327122153, 0.54462242562929064, 0.54462242562929064, 0.67933204259438529, 0.67933204259438529, 0.77583697234352256, 0.76221065455753689, 0.77913308647353519, 0.79836168872085711, 0.79857322702475864, 0.80856370816877998, 0.80928520298599038, 0.81679309986490711, 0.82693492096078836, 0.82965266977708674, 0.83063081912333925, 0.83918069357128378, 0.84914744232698092, 0.85865653738504588, 0.87338399289450308, 0.87990463891924109, 0.88300220750551872, 0.88337170887976779, 0.88777454618393337, 0.89192721423544785, 0.89783093452260299, 0.90499390986601702, 0.91083704003234933, 0.91102985984156004, 0.9123879380603096, 0.91246305920717419, 0.91765185487158574])
fscore_potential2.append([0.0, 0.30139823925427239, 0.30139823925427239, 0.57519441149334394, 0.57519441149334394, 0.71398255128507437, 0.71398255128507437, 0.80930693069306925, 0.81819964698960579, 0.81866448846232387, 0.81921076781890489, 0.81896551724137934, 0.8183844602483813, 0.82471204188481673, 0.84018452075858541, 0.84743411927877943, 0.84955575521613258, 0.85753237900477164, 0.86904293028751478, 0.8701142513529766, 0.87543912476161789, 0.87531397568572289, 0.88461538461538458, 0.88734800522560553, 0.89414819253045719, 0.89825492397183382, 0.90565656565656572, 0.90678987545198875, 0.91026027534921106, 0.91168491911986327, 0.91445843828715367, 0.91542188130803392, 0.9186959146709599, 0.91970215335077476])

average_potential2 = list(np.mean(np.matrix(fscore_potential2), axis=0).A1)
label_potential2 = [4, 14, 18, 28, 32, 42, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286, 296, 306, 316]


#squared
fscore_potential3 = []
fscore_potential3.append([0.0, 0.30169140490162233, 0.30169140490162233, 0.53169907016060858, 0.53169907016060858, 0.68218218218218218, 0.68218218218218218, 0.79182630906768847, 0.80223487244360103, 0.80269530427458413, 0.8094385336563783, 0.82024469308794301, 0.82382603214623396, 0.83190466234580807, 0.83966770508826594, 0.84347826086956523, 0.84970268607750676, 0.85367078437280308, 0.86491387126019947, 0.85894258570838489, 0.86438426162493609, 0.86547679755226936, 0.88051470588235292, 0.89094232331437861, 0.89142972781544072, 0.89437974683544297, 0.89718109916852573, 0.89983812221772552, 0.90259412536590278, 0.9023528223770575, 0.90280864821175999, 0.90480507706255675, 0.90848619229993943, 0.90925571558062246])
fscore_potential3.append([0.0, 0.29993089149965446, 0.29993089149965446, 0.54316143497757841, 0.54316143497757841, 0.67662650602409635, 0.67662650602409635, 0.77059362590367586, 0.7846424505847045, 0.77866546641161249, 0.78001122964626612, 0.80004249893752655, 0.7972103004291845, 0.8013118916631401, 0.81859410430838997, 0.82811698306824, 0.84118956099534681, 0.84731970298036829, 0.85844471445929527, 0.86117552172598033, 0.86688377773254632, 0.86674042039625865, 0.86819369097850119, 0.86949445631166711, 0.87515151515151524, 0.88272791662450678, 0.88381068454194589, 0.89047086341909887, 0.8926759991884764, 0.89982746371663458, 0.9028967768257854, 0.90660406246810243, 0.90990715233139474, 0.91215870743429794])
fscore_potential3.append([0.0, 0.30257029498016214, 0.30257029498016214, 0.557784911717496, 0.557784911717496, 0.69081718618365628, 0.69081718618365628, 0.80886970172684458, 0.76746474253853714, 0.78448087431693991, 0.79808424948296508, 0.79804241435562806, 0.81178190933778982, 0.83076923076923082, 0.82779775756293639, 0.82869630103400493, 0.83998729217409729, 0.83409501541077691, 0.84064125703365533, 0.84984227129337531, 0.84653043848446152, 0.85367153362464021, 0.85610898254576417, 0.84971037388099002, 0.86833108878068999, 0.86952956851491248, 0.87271594684385378, 0.87685950413223135, 0.87986082685223088, 0.88689077347501788, 0.88690476190476197, 0.89356002060793405, 0.89648075735748112, 0.89805974745919315])
fscore_potential3.append([0.0, 0.30139823925427239, 0.30139823925427239, 0.56842672413793094, 0.56842672413793094, 0.70089610075078712, 0.70089610075078712, 0.79908220271348762, 0.80236569738787578, 0.80291395944083488, 0.81130940445157407, 0.81583442178237708, 0.8167039813102307, 0.82271604938271603, 0.82957514758540585, 0.83475867492381794, 0.83381980930142063, 0.84342298288508566, 0.84480791175351844, 0.85071181223547521, 0.85759182871734441, 0.86526212640862332, 0.8722266244057052, 0.88594684711189564, 0.89491259084659203, 0.89625900700819261, 0.90281455329999016, 0.90338966494090067, 0.90587430358713705, 0.9060968437561262, 0.90827390837159316, 0.91433067768269893, 0.92155309033280508, 0.92729629999002694])
fscore_potential3.append([0.0, 0.30169140490162233, 0.30169140490162233, 0.56288686948505195, 0.56288686948505195, 0.69836829836829839, 0.69836829836829839, 0.78149984819350282, 0.80418213797146765, 0.80460667577591249, 0.81841726618705035, 0.84139482564679424, 0.83815466061637367, 0.8393194706994328, 0.85139290040063365, 0.8609283969178726, 0.87223823246878007, 0.87275915822291505, 0.87403903015966877, 0.87741557681046256, 0.87858892699657032, 0.88234718826405867, 0.88372093023255816, 0.88247586824559654, 0.86494877367277245, 0.86584344914190037, 0.87967326421614833, 0.88180112570356461, 0.88898103037213638, 0.89330024813895781, 0.89426356589147282, 0.89996896658735903, 0.90800698941309488, 0.9121208984577166])

average_potential3 = list(np.mean(np.matrix(fscore_potential3), axis=0).A1)
label_potential3 = [4, 14, 18, 28, 32, 42, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286, 296, 306, 316]

#no hist , squared
fscore_potential4 = []
fscore_potential4.append([0.0, 0.0, 0.0, 0.0, 0.29698857736240913, 0.49719909159727477, 0.69513813487754861, 0.80525486074619024, 0.80833419715973875, 0.81079962759904833, 0.81450200844577192, 0.82990692441444214, 0.82549655451965953, 0.83547635921838614, 0.84141883213121227, 0.84534005037783366, 0.84384653712007962, 0.85545899510538415, 0.85394857200935059, 0.86354420113544195, 0.8719401173376492, 0.86927835051546387, 0.86927835051546387, 0.88085676037483263, 0.88459551606570919, 0.8952577319587629, 0.90222632604904074, 0.90912783023657218, 0.90797050207091634, 0.90620287523876542, 0.90951276102088163, 0.90951276102088163, 0.90951276102088163, 0.90951276102088163])
fscore_potential4.append([0.0, 0.0, 0.0, 0.0, 0.30139823925427239, 0.50133809099018734, 0.69264793783622236, 0.7949589917983596, 0.8057512303387051, 0.81661698240215419, 0.81713407606607769, 0.80614824552533126, 0.81364359586316615, 0.82876918447186287, 0.84681790805059232, 0.85064011379800852, 0.85672575599582901, 0.8565985818605143, 0.876926237928909, 0.88643052877296258, 0.88778206952632643, 0.89134891348913492, 0.89260094281615088, 0.89305470190534741, 0.8921819110884005, 0.89335646494540255, 0.89441375076734198, 0.89472608340147186, 0.89509202453987724, 0.89509202453987724, 0.89509202453987724, 0.89509202453987724, 0.89509202453987724, 0.89509202453987724])
fscore_potential4.append([0.0, 0.0, 0.0, 0.0, 0.30257029498016214, 0.50090470446320867, 0.6567694455018398, 0.73983286908077994, 0.73998219056099734, 0.75175284837861533, 0.79244107569307454, 0.79668832529867961, 0.81777869444157991, 0.8097313735428282, 0.83208274183735564, 0.8203389830508474, 0.83074126439103213, 0.8294493710043308, 0.83483670295489887, 0.83766166580444912, 0.85018069179143008, 0.8595935872562035, 0.8648594175148645, 0.86965213914434225, 0.87808301584118709, 0.88240637932774801, 0.88157228244352148, 0.88482260851885741, 0.88482260851885741, 0.88482260851885741, 0.88482260851885741, 0.88482260851885741, 0.88482260851885741, 0.88482260851885741])
fscore_potential4.append([0.0, 0.0, 0.0, 0.0, 0.30139823925427239, 0.50191458026509561, 0.69193183172446671, 0.78658983761131485, 0.7872251308900523, 0.79255813953488374, 0.79179550608122029, 0.81524561221310621, 0.83240911891558844, 0.84718130033392247, 0.85465571205007829, 0.8614268914151314, 0.87769060551196931, 0.88123372721810544, 0.89080106535545989, 0.89555555555555566, 0.89491869918699185, 0.90176678445229685, 0.90489268640016263, 0.90901755093806746, 0.91464528569978698, 0.91261544707195785, 0.90781010719754973, 0.91207888249794578, 0.91778591778591778, 0.92298213185459033, 0.92662904053360706, 0.92968429684296838, 0.92854226214781543, 0.93121801432958029])
fscore_potential4.append([0.0, 0.0, 0.0, 0.0, 0.30051813471502592, 0.5, 0.67544637204001523, 0.78044739022369514, 0.77246609974718461, 0.78839097075503173, 0.79166666666666663, 0.78929168990518683, 0.80484250644546573, 0.80931875897096173, 0.80190714042456579, 0.81803939122649949, 0.81247155211652244, 0.83025172644241485, 0.8384774784600284, 0.83949002942137962, 0.8504997827031725, 0.8621208862120886, 0.86324602833834263, 0.86370959080657272, 0.86590202594061538, 0.86444848614528724, 0.86602357984994638, 0.86602357984994638, 0.86602357984994638, 0.86602357984994638, 0.86602357984994638, 0.86602357984994638, 0.86602357984994638, 0.86602357984994638])

average_potential4 = list(np.mean(np.matrix(fscore_potential4), axis=0).A1)
label_potential4 = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286, 296, 306, 316]

#hist, squared late start
fscore_potential5 = []
fscore_potential5.append([0.0, 0.0, 0.0, 0.0, 0.30281082945335408, 0.57869089951270902, 0.70824423853646945, 0.79361076082387561, 0.77958957293399889, 0.79090503789567546, 0.7923393831421891, 0.79179145867997791, 0.80951853901494197, 0.8108347153123272, 0.81911780643762866, 0.82758620689655171, 0.84296124194740729, 0.85171021882302944, 0.85448392554991537, 0.86469477658904981, 0.87572135201978563, 0.88692070030895975, 0.90121813901115777, 0.90269108769057604, 0.90417993221731541, 0.91682668014148561, 0.91802278275020344, 0.91947470222946137, 0.92114658777925118, 0.92263551593400972, 0.92441444205789092])
fscore_potential5.append([0.0, 0.0, 0.0, 0.0, 0.30286305622628495, 0.52098155945985192, 0.66770266770266762, 0.78250616357594593, 0.80207398544221764, 0.81516217272372016, 0.81511128465443194, 0.820294345468629, 0.82267383941024108, 0.83969616257275326, 0.84717184589746108, 0.85521424378790856, 0.85832770758993149, 0.86114897760467379, 0.86316611360530937, 0.86476451045534486, 0.85291290136512221, 0.86539211861100274, 0.86859036849288362, 0.87254046719007472, 0.87474492274803217, 0.87936230193448039, 0.88179347826086951, 0.88571705990872907, 0.88811324413418646, 0.8917345750873108, 0.89538281706604328])
fscore_potential5.append([0.0, 0.0, 0.0, 0.0, 0.29757785467128028, 0.54091653027823239, 0.68402024584237164, 0.7683518378786246, 0.77000437254044607, 0.77156023699802501, 0.77355806063259269, 0.77989793654315531, 0.78610563225947838, 0.79816212668198216, 0.8023216876883581, 0.80428067078552523, 0.80338454687152083, 0.8098513423563346, 0.81135857461024508, 0.81109378480730676, 0.81911715897776305, 0.8202724795640326, 0.83353010625737889, 0.83634778818914801, 0.8356059779644377, 0.84098862642169714, 0.86511529956828481, 0.87635303913405505, 0.88907284768211925, 0.89173025366054848, 0.89599835407879846])
fscore_potential5.append([0.0, 0.0, 0.0, 0.0, 0.30257029498016214, 0.55110870740941054, 0.68570040092333862, 0.76889895395233465, 0.78854306690104436, 0.8001224989791752, 0.80024497295090335, 0.80217302173021721, 0.81124664047963624, 0.81345059493016036, 0.81467700258397935, 0.82043246631150102, 0.82558626465661633, 0.82727463752889263, 0.83938359706277799, 0.85287143004433441, 0.85416236314810978, 0.85832987120897375, 0.85905478879130071, 0.86071465777685163, 0.86467961366704749, 0.88012295081967207, 0.8871243341039301, 0.89216867469879524, 0.89269955876454066, 0.89425010052271814, 0.89436760873922627])
fscore_potential5.append([0.0, 0.0, 0.0, 0.0, 0.30139823925427239, 0.54862910926203801, 0.68446185869964482, 0.76236080178173715, 0.76303791838096302, 0.74594343996291146, 0.78518037049073774, 0.79085392284351974, 0.80665730033502658, 0.81340019204096869, 0.82457075823824244, 0.83547233326320214, 0.8427122263747997, 0.84889499841387328, 0.8474430597335626, 0.84816082121471348, 0.8519701810436634, 0.85992926803129355, 0.86366059055537803, 0.86522710349962773, 0.86644053423786294, 0.88455149501661134, 0.89422585590189063, 0.90328504386859831, 0.9134146341463415, 0.91448303879748116, 0.91867101508357107])

average_potential5 = list(np.mean(np.matrix(fscore_potential5), axis=0).A1)
label_potential5 = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286]


#hist late start + no change
fscore_hist_max_pot_nochange = []
fscore_hist_max_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30051813471502592, 0.54864566058595909, 0.68190150311621656, 0.77852485737571309, 0.79051221756466616, 0.7910965897488258, 0.81311074918566772, 0.82078283330021851, 0.82368184989534543, 0.82908290829082909, 0.82429592265657847, 0.82334483840602457, 0.83852220838522218, 0.85198040016333187, 0.84247079869514885, 0.84747886000626371, 0.86043374494137181, 0.85989238410596014, 0.86773021001615513, 0.87611156022635406, 0.87406496567271241, 0.88886627315285971, 0.88688146140720669, 0.88915614351573469, 0.89255362201537825, 0.8907004830917874, 0.89747729566094847])
fscore_hist_max_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.22510822510822509, 0.52091767881241569, 0.65969095997079941, 0.76240313978061791, 0.76494930684874829, 0.75592239253939342, 0.78889700511322136, 0.79484514653918092, 0.80316091954022995, 0.80957230142566194, 0.81983538258307087, 0.81919416886009311, 0.83125707814269534, 0.84236153377967127, 0.85682394723490618, 0.86990133251958102, 0.86951169470660639, 0.87196242597508677, 0.87610075773090312, 0.88159102498725139, 0.88530980713992613, 0.88590741499385495, 0.88697612460293063, 0.88697612460293063, 0.88697612460293063, 0.9030146767155891, 0.90160642570281135])
fscore_hist_max_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.52973874374652574, 0.64879220943467819, 0.77179774137755619, 0.79555599642892572, 0.81812854073061148, 0.81859011911735979, 0.81038469623712428, 0.82610999258238849, 0.81905166914735272, 0.82811176968670619, 0.83887359728985822, 0.83864954432477223, 0.84482936385194352, 0.84147226542249876, 0.85248270878496957, 0.85664046338436073, 0.86043194784026078, 0.86837537016236088, 0.87358893521814296, 0.88284987277353688, 0.88929701050913179, 0.89425240335446921, 0.89689034369885434, 0.89778500304816089, 0.90036749693752549, 0.90026460411154086])
fscore_hist_max_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.3022774327122153, 0.56114918292040061, 0.69167754956666261, 0.78877661139998034, 0.78220189208857471, 0.78871794871794865, 0.81339519870889643, 0.81382228490832165, 0.81482974007656661, 0.82557790453317315, 0.83422992628013548, 0.84326323987538931, 0.85413005272407727, 0.8646890706612792, 0.87406253043732351, 0.87610793775851881, 0.88414213997440705, 0.88309140839544908, 0.891891891891892, 0.8956817079087821, 0.90267232028399569, 0.90948530861762966, 0.90987038883349947, 0.91128389154704936, 0.91829414109206864, 0.92208835341365447, 0.92675062972292199])
fscore_hist_max_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30286305622628495, 0.52841612770056423, 0.66847893241072531, 0.7741336633663366, 0.77647569444444442, 0.81477605692758481, 0.81361595489192862, 0.8226610811889089, 0.82411758824117587, 0.8324701195219123, 0.84019704433497544, 0.84810000992161916, 0.85518590998043054, 0.85688765383088517, 0.86745562130177511, 0.86959960454770135, 0.87154696132596687, 0.880461342977226, 0.88751835535976498, 0.88942962818765825, 0.89720354672123159, 0.89965952333266574, 0.90219037044513983, 0.90175509380673791, 0.9081766066579503, 0.91070527696498837, 0.91779857128483755])

average_hist_max_pot_nochange = list(np.mean(np.matrix(fscore_hist_max_pot_nochange), axis=0).A1)
label_hist_max_pot_nochange = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286]



fscore_hist_softmax_pot_nochange = []
fscore_hist_softmax_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30139823925427239, 0.52082742986681785, 0.66430110252186036, 0.74957832002698754, 0.7538478822604201, 0.76666666666666661, 0.76734510288991342, 0.76874648679033164, 0.76014596925798961, 0.7754016620498615, 0.78386990440610926, 0.80480874316939888, 0.81889081455805901, 0.82951871657754006, 0.83174467173610356, 0.83295638126009686, 0.83421194190424952, 0.84852925782476707, 0.84871311989956055, 0.85828008798575472, 0.87873172740374716, 0.8856642996809716, 0.89551020408163251, 0.90179492469568812, 0.90198101527032604, 0.90512767282540996, 0.91129453557621976])
fscore_hist_softmax_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.55428571428571427, 0.69234484424052156, 0.79607998416155223, 0.79651967569705351, 0.80900010089799212, 0.81604256189891555, 0.81553398058252424, 0.82084625387616283, 0.83361245197517486, 0.84574104790711291, 0.84562438544739438, 0.85132585162379582, 0.85924161207067684, 0.86497764530551413, 0.87649164677804303, 0.87799542607139303, 0.8780439320147102, 0.87837837837837851, 0.88437001594896336, 0.89093825180433028, 0.89362980769230771, 0.88956127080181535, 0.8953054013124685, 0.89619691314435601, 0.89803291850662392, 0.89182740107377223])
fscore_hist_softmax_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30198446937014672, 0.54420079988967029, 0.68381165362156793, 0.77325952735788794, 0.77365116526551014, 0.79536208299430422, 0.80541724756024702, 0.80434332988624602, 0.80594856965816364, 0.80960725698381608, 0.83833167825223442, 0.84826289221023454, 0.84863425697662953, 0.86123922197714053, 0.87671232876712313, 0.88230647709320686, 0.88812018185412134, 0.89575439619158648, 0.90314913844325606, 0.90085776979852383, 0.90445480702450642, 0.9060828214781057, 0.91094803649345502, 0.91138988450816405, 0.91634567901234565, 0.91865552903739067, 0.92047713717693835])
fscore_hist_softmax_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30490956072351416, 0.50700200057159195, 0.65313417592237966, 0.76713773465513602, 0.78629297131596232, 0.81781626971852772, 0.82282282282282282, 0.82391465089257421, 0.81752298539751211, 0.81790657439446368, 0.82452652506016533, 0.82452652506016533, 0.84086609207483698, 0.84197271773347326, 0.85191878388434139, 0.85423376623376635, 0.86012911158930228, 0.85327501822347196, 0.86168784216506566, 0.87214983713355054, 0.8757237386269644, 0.88333677472640926, 0.88953009068425382, 0.89750409165302791, 0.90314543755839305, 0.90580995097527917, 0.90990057995028994])
fscore_hist_softmax_pot_nochange.append([0.0, 0.0, 0.0, 0.0, 0.30139823925427239, 0.54993234100135324, 0.69509746012994678, 0.79532042654519097, 0.79590570719602982, 0.76182467941980248, 0.75087791778558144, 0.76663993584603041, 0.81555909271786708, 0.8201553475403307, 0.82745020705975147, 0.82907774390243905, 0.83727083727083729, 0.84287063267233242, 0.85006079880273133, 0.85035540591096148, 0.85049088359046288, 0.85248988044808427, 0.85546983920438702, 0.86320575975748393, 0.86535350651822251, 0.87158549625741233, 0.88385324700804391, 0.88268266299537812, 0.88908313908313918, 0.90002937432683827, 0.90073349633251842])

average_hist_softmax_pot_nochange = list(np.mean(np.matrix(fscore_hist_softmax_pot_nochange), axis=0).A1)
label_hist_softmax_pot_nochange = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 236, 246, 256, 266, 276, 286]


#stop:change < 0.01, cert>0.7
fscore_stop = []
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29816672431684538, 0.54610514726121662, 0.68337242315763491, 0.77904901857877618, 0.78237202972888098, 0.79005181347150255, 0.80545305453054528, 0.80865332612222818, 0.8083955425727577, 0.82007656316461075, 0.80960761983642204, 0.81281302170283809, 0.82123856139604168, 0.84010068950421368, 0.86444301902929221, 0.87357774968394442, 0.88644155844155847])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29289399234481611, 0.51759610178668114, 0.65783770768119432, 0.77280397022332492, 0.78094272681196153, 0.80062487795352477, 0.8010825439783491, 0.80296735905044503, 0.80481072555205047, 0.80887405516835176, 0.82086211929551423, 0.83179933245676141, 0.83838996763754048, 0.83672211953173137, 0.84740833073647026, 0.8495972264708882, 0.84971451876019566])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.30490956072351416, 0.51809052139221357, 0.66941048299237382, 0.77072365025291634, 0.77110423116615079, 0.7996388080666198, 0.80773102476343883, 0.81940481043620061, 0.81940481043620061, 0.82586259233026416, 0.83218344155844159, 0.83845153546063822, 0.83720930232558133, 0.83970394403325554, 0.84212725942952671, 0.85362545644235788, 0.86154166233225848])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29728326700121127, 0.52980861902794985, 0.67438741923686463, 0.77843820455011281, 0.78255540802778056, 0.80660236651088801, 0.78145304193738929, 0.78844822470576592, 0.78808864265927991, 0.79572400388726927, 0.82840003933523443, 0.83083891295785739, 0.83139129568768055, 0.84053354568982674, 0.85042481722979646, 0.85069306930693078, 0.85148514851485158])
fscore_stop.append([0.0, 0.0, 0.0, 0.0, 0.29816672431684538, 0.54610514726121662, 0.68337242315763491, 0.77904901857877618, 0.78237202972888098, 0.79005181347150255, 0.80545305453054528, 0.80865332612222818, 0.8083955425727577, 0.82007656316461075, 0.80960761983642204, 0.81281302170283809, 0.82123856139604168, 0.84010068950421368, 0.86444301902929221, 0.87357774968394442, 0.88644155844155847])

average_stop = list(np.mean(np.matrix(fscore_stop), axis=0).A1)
label_stop = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186]



fscore_0 = []
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.3022774327122153, 0.49671676637968776, 0.65743690271992161, 0.75257944696657042, 0.75283680627192073, 0.78949889815080954, 0.79103877838055048, 0.79462532299741595, 0.79586990191017037, 0.79917184265010344, 0.81055742382553764, 0.83308149491286387, 0.8330145948666331, 0.8419377300308365, 0.85089463220675954, 0.84464431725265743, 0.84507618365886072, 0.8459251665812404, 0.8491414554374489, 0.87017048320387369])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.29846100639806333, 0.50698602794411185, 0.65282201554338126, 0.76877339792997135, 0.77080356161371877, 0.79118253882071887, 0.79237104464672736, 0.79590737749057605, 0.7972027972027973, 0.81930693069306926, 0.82510096303199754, 0.82014853083629313, 0.819686223941543, 0.82251725969198086, 0.8320016820857864, 0.84796573875803005, 0.84891792568395263, 0.84415449932691322, 0.84934903905765646, 0.85723108594956254])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.54260338606716629, 0.68801780635587984, 0.78817226457861123, 0.78867147270854787, 0.779789301421704, 0.78847687400318978, 0.78198236938292842, 0.77548853016142738, 0.79768786127167635, 0.80979403110550652, 0.79982882208195138, 0.80834955656500107, 0.81518116331577262, 0.82387932865944347, 0.84141519250780439, 0.84153574029757572, 0.84974629802216006, 0.85770423991726996, 0.86868480261812231])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.29757785467128028, 0.53098071399261382, 0.66875527171948423, 0.77243655869610051, 0.77471169686985175, 0.76800858829844343, 0.78049823586015177, 0.76914539400665927, 0.77050997782705111, 0.80356581017304651, 0.81378438191590263, 0.83398170539375471, 0.83398170539375471, 0.84032904450537871, 0.85134993171551643, 0.86114469971785568, 0.86114469971785568, 0.87170227705888248, 0.87019854335029434, 0.8738848337388484])
fscore_0.append([0.0, 0.0, 0.0, 0.0, 0.30169140490162233, 0.54760269267756556, 0.65843113032736245, 0.77013054830287198, 0.77062689058099509, 0.77226277372262764, 0.79710872402369237, 0.78118348233290757, 0.76559900166389339, 0.78348846620801282, 0.79302108214767897, 0.80519480519480513, 0.82020583910943079, 0.82535034511608452, 0.83696437790397527, 0.85085771947527744, 0.8539894694208181, 0.86012992285830281, 0.86458439312239288, 0.87733549959382606])

average_0 = list(np.mean(np.matrix(fscore_0), axis=0).A1)
label_0 = [4, 8, 12, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106, 116, 126, 136, 146, 156, 166, 176, 186, 196, 206, 216]



ranges = [label_hist_max_pot_nochange, label_hist_softmax_pot_nochange, label_stop, label_0]
list = [average_hist_max_pot_nochange, average_hist_softmax_pot_nochange, average_stop, average_0]
names = ["argmax potential hist - no change", "softmax potential hist - no change", "heuristic: change < 0.01, cert>0.7","full round robin"]

#list_real = [fscore_potential, fscore_0]

#plot_real_stats(ranges, list_real, names)

plot_list(ranges, list, names)