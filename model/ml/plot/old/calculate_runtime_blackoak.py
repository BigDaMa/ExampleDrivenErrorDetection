import matplotlib.pyplot as plt
import numpy as np

from ml.datasets.blackOak import BlackOakDataSet

data = BlackOakDataSet()

init_labels = 4
std_labels = 10
columns_eval = 10
sec_pro_label = 3.0

fscore_all = []


'''
#std active learning, no stop criterion
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20012207943518531, 0.25386856758621601, 0.41466433595704261, 0.46892432523806837, 0.57893657155151279, 0.70256618928410297, 0.70749683905387484, 0.70750253315124023, 0.70750253315124023, 0.74519324856697966, 0.7491604672232115, 0.75374344923565373, 0.754499197387558, 0.81992328257584568, 0.84040818069254086, 0.8553099479493852, 0.90187938499685372, 0.90187938499685372, 0.90187938499685372, 0.90733775816160611, 0.90846046226507471, 0.91237386578151902, 0.91239429476850498, 0.91248123045048268, 0.91818444173667668, 0.92671278690037029, 0.93019831617325843, 0.93046475437020559, 0.93091040665768787, 0.93091040665768787, 0.93008550827989345, 0.93236071269309873, 0.93236355504321533, 0.9320129220419805, 0.93603961499574073, 0.93890562906677144, 0.94091704901395579, 0.9565499598597258, 0.96939385589585492, 0.96939385589585492, 0.96942323314378542, 0.97165316414511149, 0.97165316414511149, 0.97191976629747079, 0.97536979246201572, 0.97489147121451458, 0.97730611093774689, 0.97730611093774689, 0.98019022075242013, 0.98019022075242013])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20005885030413656, 0.23967151801689551, 0.35574865517630433, 0.46227290675972571, 0.55832618052640481, 0.66719866866972055, 0.668526806295348, 0.66853247239591018, 0.66853247239591018, 0.65420151065551668, 0.66145348394998904, 0.66624960085498486, 0.71274491692113762, 0.7437250997411704, 0.76976471147124892, 0.79157605892149652, 0.84602589692410057, 0.84963281650963418, 0.84963718987527848, 0.88397370494259264, 0.88397658764393794, 0.89041097653419621, 0.89048889369319273, 0.89035910983400157, 0.89603548019778012, 0.90624218536783507, 0.89966720826394908, 0.9124004379224796, 0.91240809931300471, 0.94536960446157781, 0.94517342172119578, 0.94507483756868094, 0.94504000322995307, 0.94526955058842532, 0.95186331529482504, 0.9569550026748741, 0.958271038017941, 0.95849818468781833, 0.97480412040499531, 0.97480412040499531, 0.974903827577007, 0.97586005616264027, 0.97591256324874742, 0.97583461597609888, 0.975941855651134, 0.97348441926345619, 0.98271118765431775, 0.98322511529467094, 0.98322511529467094, 0.98322511529467094])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19306548457129363, 0.23970296856095805, 0.40067542542642198, 0.50667034717951576, 0.59673617948029478, 0.67696875613162355, 0.67973152662572023, 0.67973722648745505, 0.67973722648745505, 0.67283055687242976, 0.68798461599014882, 0.69677145892778691, 0.69755072614195168, 0.72844262021750572, 0.76045570615938229, 0.80429937924723771, 0.84912140554091309, 0.85530966801915698, 0.85530966801915698, 0.90470487370573105, 0.90498218481898662, 0.90728959305228574, 0.90747125149687191, 0.90097797583700756, 0.91396157624598762, 0.91894482019828594, 0.92079960888695744, 0.93086370713018074, 0.93086644704049248, 0.93082808701814101, 0.93100479425202232, 0.92983143261092605, 0.92971164376790272, 0.93611619637620147, 0.93286023744785329, 0.9421035037584401, 0.94538787755328801, 0.93499801771021163, 0.94900167546426217, 0.94903992502927725, 0.94734466383987703, 0.94912376872107673, 0.94926277697707451, 0.94929805279638335, 0.95694205031546209, 0.95775518579510321, 0.96439497510769467, 0.97348705999059659, 0.97380120734738673, 0.97380120734738673])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20075733975756821, 0.26177292388407175, 0.41738881068887596, 0.52070181091593015, 0.62168806865844994, 0.7487646879215365, 0.7570367079342567, 0.75703369967334122, 0.75703369967334122, 0.7704225540748677, 0.77343236091539014, 0.76999916711383098, 0.77362756501581309, 0.8097905745803412, 0.82355855124248822, 0.80468440357464477, 0.85484463932547794, 0.85486422410033958, 0.85590863047544519, 0.88543044897239132, 0.88781249914044691, 0.88796376555041456, 0.88806633146472036, 0.8879389777055845, 0.89764445432609352, 0.92670603275095875, 0.91177236147597951, 0.92814475715222111, 0.94203749670474801, 0.94203749670474801, 0.94331034428821514, 0.95014370891100286, 0.95013957348025091, 0.95038226058830333, 0.95805508629409364, 0.96229310054952555, 0.95910684417931469, 0.95910684417931469, 0.95991716705118058, 0.95991716705118058, 0.95994144384301894, 0.96000278825164997, 0.96000413073785307, 0.95993691096030087, 0.95953429927709344, 0.9598709667413674, 0.97239386357906166, 0.97309624468953837, 0.97408928352012214, 0.97408928352012214])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20077698067710956, 0.2412915723145487, 0.40255219000541548, 0.54163493791069395, 0.60158582760926926, 0.68639875261476069, 0.69341255835771876, 0.69339396115033303, 0.69339396115033303, 0.67617291836023685, 0.68253914751119271, 0.6869161062650081, 0.69172346526620399, 0.69194128084418671, 0.7387257196266438, 0.79531751175133925, 0.84657666849802482, 0.84734464442671142, 0.8473918550145586, 0.91428382887285897, 0.91428382887285897, 0.90124461368874642, 0.9012681026293321, 0.90112411777591372, 0.91740602136069294, 0.91786033696370195, 0.91517181717065943, 0.93112704465784224, 0.94407866793959427, 0.94407866793959427, 0.94308411901306977, 0.95784541816236701, 0.95784541816236701, 0.9579694787565648, 0.96368250634462249, 0.96519117480748862, 0.96952810223565988, 0.96954546279233111, 0.97058469409816672, 0.97058469409816672, 0.97175292101654243, 0.96741589963978603, 0.96741589963978603, 0.96750810462011638, 0.97260792075104141, 0.97451961131039599, 0.97576714970479095, 0.97576714970479095, 0.97783209003804006, 0.97783209003804006])
'''


#distinct active learning, no stop criterion
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20019403096996738, 0.25515300387948225, 0.41289471412894713, 0.52015754712125062, 0.61942677773436339, 0.73661296462207126, 0.73748154532006671, 0.7327364275995466, 0.75332485507216751, 0.79220835814825041, 0.79437689246817489, 0.79672485701761986, 0.80070917242672568, 0.82785163874346979, 0.84959825456323546, 0.86694880264244434, 0.90884523358815206, 0.93648518396302094, 0.93648518396302094, 0.93649495562120522, 0.93652808011300137, 0.9351802605095475, 0.93590989502864641, 0.94229941672067408, 0.94609729891021965, 0.95349021012919677, 0.96231356296376602, 0.9618072306483475, 0.9618072306483475, 0.9618072306483475, 0.96041117148111255, 0.96542813269501904, 0.96545251045614311, 0.96580044545528299, 0.97562558152511725, 0.96682307352321428, 0.96514175939464319, 0.96584006516609566, 0.96584006516609566, 0.96584006516609566, 0.96694573485119195, 0.9676177729987625, 0.96761909140365798, 0.96773666313817663, 0.97132472609143417, 0.97835911597214775, 0.97723047186400569, 0.97756865216880284, 0.97756865216880284, 0.97756865216880284])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20039484358660534, 0.23960625733568075, 0.4062745651132354, 0.54428208899432917, 0.64454769931521172, 0.77095238595327864, 0.774274789459789, 0.79016487646599587, 0.75601770621117248, 0.74117069588380102, 0.74266597200233631, 0.74593757350402123, 0.74592154288837376, 0.74901175123319674, 0.76763352964640752, 0.77548328553531165, 0.80841796463437754, 0.8124400049589996, 0.86208182969937164, 0.91940901570644351, 0.91993277984114163, 0.92461240160369562, 0.92607252973889664, 0.92607252973889664, 0.93643998748095625, 0.94439476846794934, 0.95461995924598686, 0.95515282910572818, 0.95515282910572818, 0.95515282910572818, 0.95515282910572818, 0.95736748050649323, 0.95767726074071802, 0.95767848193917204, 0.96669770217231388, 0.97125181057128118, 0.97736500203004473, 0.97737564804597221, 0.97737564804597221, 0.97737564804597221, 0.97737830951532012, 0.97891986221180971, 0.97900211654923219, 0.97900211654923219, 0.98519875214898955, 0.99029490672924969, 0.9928718650012105, 0.9928718650012105, 0.9928718650012105, 0.9928718650012105])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19934897294870357, 0.24292873792498088, 0.40613569514748721, 0.53758471738794489, 0.62024900180613252, 0.74799841887490626, 0.75256271405608244, 0.77203531572628703, 0.79028848062269696, 0.82952305489525546, 0.83315255001942445, 0.84654209218956111, 0.84814903749394488, 0.85762355120253697, 0.88258985372760235, 0.88791060489656881, 0.90955643707176348, 0.91070067554129397, 0.91352122429935279, 0.91406869741913133, 0.91406869741913133, 0.91122043575210754, 0.91134542568140142, 0.90742274232270559, 0.90899672883013516, 0.92333131084545461, 0.93984466889704843, 0.93997190010633469, 0.93997190010633469, 0.93997190010633469, 0.94010679751767934, 0.94282001900756207, 0.94282141639195183, 0.94643569636755087, 0.96027370176929394, 0.96165262188256972, 0.96398482820759102, 0.96461253314931006, 0.96461253314931006, 0.96461253314931006, 0.96461928350182236, 0.96469386570102877, 0.96469386570102877, 0.96484607536057432, 0.97230949304830727, 0.97853974564261137, 0.98714429289679906, 0.98714429289679906, 0.98714429289679906, 0.98714429289679906])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19334436749299577, 0.23311130756754689, 0.39654885266411838, 0.5049680586710843, 0.60799479141106305, 0.727623922126859, 0.72879815724921726, 0.74770291018955493, 0.76847135708043179, 0.80756085502164221, 0.81754754772449445, 0.81960855965551938, 0.82280405751562569, 0.85670437987606962, 0.85960391583211437, 0.86786263824776, 0.92092098452626325, 0.92235210665551481, 0.92235495896806785, 0.92247826029409818, 0.92247780505422794, 0.92273671230670307, 0.92260301362956676, 0.92266656102891176, 0.93150966601082852, 0.94164442473147569, 0.93572350715831798, 0.93641732763567131, 0.93641732763567131, 0.93641732763567131, 0.93712073333025037, 0.93712892526737923, 0.93734413124005045, 0.93753580925709445, 0.94834220977126504, 0.94816880379976576, 0.95104972205698346, 0.94800053685441654, 0.94800053685441654, 0.94800053685441654, 0.94821991577106313, 0.9519236404312299, 0.95193432247116294, 0.95194052059764767, 0.95696911571150178, 0.9679383839191521, 0.97308946650773986, 0.97586545470192687, 0.97586545470192687, 0.97586545470192687])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18989951225245341, 0.2531154381397524, 0.3673822992805425, 0.47637115841229777, 0.59212327031273759, 0.70764693490625663, 0.71358926824522639, 0.72561176465881339, 0.74555173690332111, 0.73240773880537657, 0.72401105746768424, 0.71970783366081625, 0.74124848514827002, 0.76826963206117971, 0.78427351790277033, 0.79046301530161944, 0.83746396113229737, 0.84396030881503836, 0.84396030881503836, 0.89527047197801868, 0.91387605599491906, 0.92116250188260906, 0.95150217496498479, 0.95132272564124498, 0.95304795720009017, 0.96725397032279981, 0.96725397032279981, 0.96737276825921925, 0.96737276825921925, 0.96737276825921925, 0.96737276825921925, 0.96787558228793158, 0.96828648197662581, 0.96853855540858103, 0.97675870536297382, 0.98370129257477112, 0.97817003163197558, 0.97875798903579336, 0.97875798903579336, 0.97875798903579336, 0.97875798903579336, 0.97867823831092893, 0.97868222859204257, 0.97870833148848946, 0.98038746586919778, 0.98427340245721562, 0.99217081664042084, 0.99163064760911224, 0.99163064760911224, 0.99163064760911224])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19935954182247956, 0.25193324191863492, 0.41500081129320132, 0.51974290297681935, 0.6082719599111337, 0.73643191239643624, 0.73754615276873303, 0.74965381634833761, 0.73162587835552872, 0.76790802079916098, 0.76999383090457607, 0.77694865953908776, 0.7776813995165458, 0.80925289622411234, 0.83301865610711967, 0.83958015247685525, 0.88501013847948573, 0.89299150612678879, 0.88334292502250356, 0.88612144858066566, 0.88318332636719199, 0.88398565737635459, 0.88387870916394962, 0.88361948423228953, 0.89070357817212376, 0.89845145289238693, 0.90350905478510857, 0.90419770223208196, 0.95642130067795961, 0.95642130067795961, 0.96089262470777936, 0.96303173006109521, 0.96317284861562635, 0.96345646745852087, 0.96641331667350627, 0.97278421242308888, 0.97113125253597987, 0.97114398519883205, 0.97114398519883205, 0.97114398519883205, 0.97156264591033703, 0.97199579982651452, 0.97199579982651452, 0.972048968433464, 0.98260668985429123, 0.98509553775892411, 0.98802678929211485, 0.9880479231683903, 0.98804663353103339, 0.98804663353103339])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20114008019364735, 0.24382292265548375, 0.40610580808855878, 0.51377044596672727, 0.60476542864190619, 0.73793932992166322, 0.74008014639457054, 0.75032124906183906, 0.77103577059408934, 0.78656898881845672, 0.79147200997351108, 0.79397790401403456, 0.79525668436664199, 0.82135775885043016, 0.84514553194163022, 0.84779504398877048, 0.88936469433645371, 0.89883378752109622, 0.89893306781275728, 0.92478520081709459, 0.92533541139035003, 0.93037724243575837, 0.93098494147975863, 0.93670672902975394, 0.94966405077315685, 0.95943921232876717, 0.96574060857717514, 0.96576567224219145, 0.96576567224219145, 0.96576567224219145, 0.9655326014611546, 0.96914785475287346, 0.96935685526319193, 0.96945065225300131, 0.96362844073802512, 0.96917805072989682, 0.97315747180291223, 0.97261627663143768, 0.97261627663143768, 0.97261627663143768, 0.97262435551641246, 0.97310214108005644, 0.97315732697885904, 0.97320907721611416, 0.98578195333362972, 0.9889314953558952, 0.98552921109852476, 0.98648249439427604, 0.98648249439427604, 0.98648249439427604])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19977367345569161, 0.24039995745133494, 0.40234051055097181, 0.51135123966218576, 0.57614995152429171, 0.71044642047393036, 0.71270029196073459, 0.72916728682500198, 0.75028157862455802, 0.76686213139240911, 0.77266896656123274, 0.78505707697544347, 0.78662283229909147, 0.81779107427128506, 0.85236905273836638, 0.85339513337905559, 0.90388142390750126, 0.9072771764848786, 0.9072771764848786, 0.93261968480523338, 0.93360891668306012, 0.93807998002580006, 0.93817249391789193, 0.93805107124738207, 0.94296338769028054, 0.94483615572988011, 0.94483615572988011, 0.9447682738418226, 0.9447682738418226, 0.9447682738418226, 0.94472364411904486, 0.94621806065819258, 0.94622761643083197, 0.94646400281822951, 0.95070201782725872, 0.96699868982214243, 0.95854963599413479, 0.958820002521802, 0.958820002521802, 0.958820002521802, 0.95888292280592047, 0.95899247704178481, 0.95899247704178481, 0.95900196148084083, 0.97079746435632108, 0.97515578214777043, 0.98519417223498118, 0.98574612850189436, 0.98574612850189436, 0.98574612850189436])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20009481851504954, 0.26213898096011434, 0.42115234996996775, 0.4941012035345948, 0.59307757102381498, 0.72504361479413826, 0.72707902124089574, 0.74631639879654976, 0.76664604656394109, 0.74812914205469405, 0.75059176203909195, 0.75290359088948478, 0.75459236162978938, 0.78793127846582001, 0.81315705171157304, 0.81295173417414501, 0.86346913981622486, 0.86333349989823294, 0.86387953142989415, 0.92261546626673741, 0.92372467181491558, 0.9252771686005582, 0.92532751589308304, 0.94460046811408949, 0.94740816711824094, 0.95408095486270772, 0.94104288223914079, 0.94327567580126159, 0.94327567580126159, 0.94327567580126159, 0.94540817050959514, 0.94611096705613107, 0.94611368617682079, 0.9458794619695261, 0.95191217225583924, 0.9646017465983483, 0.96341175362081277, 0.96343316042247218, 0.96343316042247218, 0.96343316042247218, 0.96314795512946194, 0.96320994310523389, 0.96321128039499959, 0.96344515225707139, 0.97027763473526485, 0.97435411321068321, 0.98818925481505937, 0.98818925481505937, 0.98818925481505937, 0.98818925481505937])

'''
fscore_full = []
fscore_full.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20089419053991789, 0.26465548757658647, 0.42265622814484455, 0.52618037786112382, 0.6386219488756486, 0.75733679138966437, 0.75927332236722278, 0.77546596596183026, 0.74135392156357971, 0.7480183512392401, 0.7523891528997132, 0.74342952799420414, 0.74514657336086354, 0.77364803382190306, 0.7871052796785738, 0.79421066105787319, 0.84467853556762096, 0.84764606304616363, 0.90295971602895297, 0.94031776439583681, 0.94102887793532974, 0.95310691602432818, 0.95324920425141368, 0.95098265655939151, 0.95178133942725396, 0.95877053524112343, 0.95877322689718636, 0.95894156343751791, 0.95907066795740559, 0.95917545571404239, 0.9592904088513029, 0.95789183734412497, 0.95789183734412497, 0.95996845057106273, 0.97061436355654251, 0.97603776182719859, 0.97124425810031756, 0.9717918299515319, 0.97179307898349188, 0.97179307898349188, 0.97213293492627595, 0.97323817100896259, 0.97324213645802349, 0.97348210366987709, 0.97685663869429562, 0.9828576621252344, 0.99011326047816439, 0.99010136775152535, 0.99010136775152535, 0.99010136775152535])
fscore_full.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17959813640012118, 0.21792368817646254, 0.37390394131960586, 0.44101162426484353, 0.49330512331877818, 0.63610413970216584, 0.63705565602999936, 0.65699545810043847, 0.67759009786826752, 0.68371809602023648, 0.71384281612367351, 0.71655634595841688, 0.71934604157816118, 0.75214153606541412, 0.80322343095796489, 0.81425405908437609, 0.86777188852376363, 0.86996053774644799, 0.87192039724883508, 0.91387669064957111, 0.91437396719807928, 0.91557720152691857, 0.91558978409689307, 0.94593370225694451, 0.94289931062327625, 0.94846778780742536, 0.94846778780742536, 0.94865930780263574, 0.9486564707310986, 0.9486564707310986, 0.94950329784303233, 0.95413852256888598, 0.9542856759998124, 0.95436563243776396, 0.97283390541845405, 0.97860211316101875, 0.97516599244120017, 0.97503262515007572, 0.97503530032024766, 0.97503530032024766, 0.97538941948690105, 0.97524493931354317, 0.97524895320189009, 0.97526295998412305, 0.98001885978315184, 0.98021564098831304, 0.98604610748407329, 0.98674113564311738, 0.98674113564311738, 0.98674113564311738])
fscore_full.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19878082210875028, 0.24150070794501738, 0.35317078067359425, 0.46073630078670436, 0.51662840785566522, 0.65532286212914481, 0.65992326867538242, 0.68099649348989444, 0.65973170936757819, 0.68910295471992533, 0.69369666420319243, 0.70380867736116559, 0.7175265130372378, 0.74113996448597663, 0.7769814450036483, 0.77879129031498995, 0.80579109550079031, 0.80623652170549387, 0.85087531261164706, 0.86408623473032586, 0.86455819886991014, 0.86631928309808781, 0.90745044174525968, 0.91360008785569169, 0.92702918779366417, 0.9380522648317754, 0.94916312599477604, 0.94652322587673277, 0.94652322587673277, 0.94652322587673277, 0.94596061826797362, 0.9462184606235664, 0.94706583839726421, 0.94651250147665678, 0.95682724403517205, 0.95922002656989436, 0.97120514196651397, 0.97377431545994719, 0.97377431545994719, 0.97377431545994719, 0.97426466326928796, 0.97426525983935586, 0.97427582751990638, 0.9747445492249589, 0.97762949611492289, 0.98162849424172816, 0.97010756886206151, 0.9706463171627453, 0.9706463171627453, 0.9706463171627453])
fscore_full.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1694274784585634, 0.21041241508560149, 0.37304752017365861, 0.47816380274860742, 0.56150210551760116, 0.68928167806893714, 0.69186215495562298, 0.71085268424319592, 0.72968743632584854, 0.73422638416699371, 0.76994812905406829, 0.77916768095570899, 0.77967557039583124, 0.81343988790589306, 0.84334077331230539, 0.85610196965011243, 0.89920966622224563, 0.9006444958718397, 0.90279005013973368, 0.94288415387971791, 0.94137224209407977, 0.94409472501147662, 0.94416715031921072, 0.94606810075100056, 0.95389116945480512, 0.95905884693566357, 0.94897367859212489, 0.94894284430841391, 0.94894284430841391, 0.94894284430841391, 0.95138163045761526, 0.9514945039835615, 0.95150117825592662, 0.95160351339817462, 0.96281176880569519, 0.96607762984225432, 0.97991387013405928, 0.98069813698230712, 0.98069813698230712, 0.98069813698230712, 0.98103509301575076, 0.98104967839236512, 0.98105100431498904, 0.98126850642423369, 0.98335704828224868, 0.98554513321572945, 0.99210201153938782, 0.991959041366963, 0.991959041366963, 0.991959041366963])
fscore_full.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20044418991213978, 0.2314610904151316, 0.39971751412429374, 0.47197700334594628, 0.55417076877977045, 0.69004704966746855, 0.69324375973892327, 0.71234397633731472, 0.73161883675381079, 0.71372237272888928, 0.7161053085253688, 0.72421301787433723, 0.71938374100212554, 0.74308439090005263, 0.77206693016732542, 0.78333618322453447, 0.82903145037503134, 0.83107001410491843, 0.83325864578968145, 0.89329845559551968, 0.89456234179022098, 0.8986342274563881, 0.9028489902592689, 0.9240612162352505, 0.93395877471693711, 0.94074777784484409, 0.94635762108392341, 0.94652151114102567, 0.9466053291630091, 0.9466053291630091, 0.947241890119356, 0.95004944631849686, 0.95062096554705777, 0.96250357614182747, 0.96644376996213321, 0.96289921465106076, 0.96255433053474659, 0.9624886453714524, 0.9624886453714524, 0.9624886453714524, 0.9626441995429792, 0.96263228208958362, 0.96283957888537142, 0.96274394783153094, 0.97385101575461419, 0.97818008352581365, 0.98014647260109178, 0.98065266669963225, 0.98065134024830936, 0.98065134024830936])
'''

matrix = np.matrix(fscore_all)

'''
for i in range(1,len(save_time)):
    print str(i) + ": " + str(save_time[i]-save_time[i-1])
'''

time = 100 #save_time[9]

approx_time = []

average = list(np.mean(matrix, axis=0).A1)

print average

for i in range(9, len(average)):
    print "time: " + str(time / 60) + " fscore: " + str(average[i])
    approx_time.append(time)
    time = time + (std_labels * sec_pro_label)

def plot_real_stats(ranges, list_all, list_names):
    fig = plt.figure()
    ax = plt.subplot(111)

    print list_names

    for i in range(len(list_all)):
        mins = np.min(np.matrix(list_all[i]), axis=0).A1
        maxes = np.max(np.matrix(list_all[i]), axis=0).A1
        means = np.mean(np.matrix(list_all[i]), axis=0).A1
        std = np.std(np.matrix(list_all[i]), axis=0).A1

        print len(std)
        print len(means)
        print len(ranges[i])
        print list_names[i]

        # create stacked errorbars:
        ax.errorbar(ranges[i], means, std, label=list_names[i])
        ax.errorbar(ranges[i], means, [means - mins, maxes - means], fmt='.k', ecolor='gray', lw=1)

    ax.set_ylabel('fscore')
    ax.set_xlabel('labels')

    ax.legend(loc=4)

    plt.show()

def plot_list(y_series, list_series, list_names, fscore_all, measure_name):
    mins = np.min(np.matrix(fscore_all), axis=0).A1[9:len(fscore_all[0])]
    maxes = np.max(np.matrix(fscore_all), axis=0).A1[9:len(fscore_all[0])]
    means = np.mean(np.matrix(fscore_all), axis=0).A1[9:len(fscore_all[0])]
    std = np.std(np.matrix(fscore_all), axis=0).A1[9:len(fscore_all[0])]


    fig = plt.figure()
    ax = plt.subplot(111)

    ax.errorbar(np.array(y_series[0]), means, std, label=list_names[0], linewidth=2)
    ax.errorbar(np.array(y_series[0]), means, [means - mins, maxes - means], fmt='.k', ecolor='gray', lw=1)

    for i in range(1,len(list_series)):
        ax.plot(np.array(y_series[i]), list_series[i], label=list_names[i], linewidth=2)

    ax.set_ylabel('F-score')
    ax.set_xlabel(measure_name)

    ax.legend(loc=8)

    plt.show()

def plot_list1(y_series, list_series, list_names, fscore_all, measure_name):
    mins = np.min(np.matrix(fscore_all), axis=0).A1
    maxes = np.max(np.matrix(fscore_all), axis=0).A1
    means = np.mean(np.matrix(fscore_all), axis=0).A1
    std = np.std(np.matrix(fscore_all), axis=0).A1


    fig = plt.figure()
    ax = plt.subplot(111)

    ax.errorbar(np.array(y_series[0]), means, std, label=list_names[0], linewidth=2)
    ax.errorbar(np.array(y_series[0]), means, [means - mins, maxes - means], fmt='.k', ecolor='gray', lw=1)

    for i in range(1,len(list_series)):
        ax.plot(np.array(y_series[i]), list_series[i], label=list_names[i], linewidth=2)

    ax.set_ylabel('F-score')
    ax.set_xlabel(measure_name)

    ax.legend(loc=8)

    plt.show()

print str(len(approx_time)) + " vs " + str(len(average))

dboost_fscore = [0, 0, 0.60, 0.60]
dboost_time = np.array([0, (5.5-0.001)*60, 5.5*60, 35*60])

nadeef_fscore = [0.0, 0.0, 0.35, 0.35]
nadeef_time = np.array([0, (30-0.001)*60,  30*60, 35*60])

openrefine_fscore = [0.0, 0.0, 0.981, 0.981]
openrefine_time = np.array([0, (4-0.001)*60,  4*60, 35*60])

plot_list([(np.array(approx_time) / 60.0),(dboost_time / 60.0), (nadeef_time / 60.0), (openrefine_time / 60.0)],
          [average[9:len(average)], dboost_fscore, nadeef_fscore, openrefine_fscore],
          ['Our Algorithm','dBoost','Nadeef', 'OpenRefine'],
          fscore_all,
          'Runtime in minutes')
plt.show()




label_full = [4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 400, 410, 420, 430, 440, 450, 460, 470, 480, 490, 500, 510, 520, 530, 540]



print len(fscore_all[0])
print len(label_full)

data = BlackOakDataSet()

print "shape: " + str(data.shape)

plot_list1([np.array(label_full) / float(data.shape[1])],
          [average],
          ['Our Algorithm'],
          fscore_all,
          'Number of rows to label')
plt.show()

plot_list1([np.array(label_full) / float(data.shape[0] * data.shape[1])],
          [average],
          ['Our Algorithm'],
          fscore_all,
          'Labelled cells / Total cells')
plt.show()
