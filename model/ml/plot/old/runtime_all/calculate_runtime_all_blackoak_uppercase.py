from ml.datasets.blackOak.BlackOakDataSetUppercase import BlackOakDataSetUppercase
from ml.plot.old.runtime_all.Plotter2 import Plotter2

data = BlackOakDataSetUppercase()

#data.clean_pd.to_csv("clean_blackoakupper.csv", index=None, escapechar='\\', encoding='utf-8', quotechar='"')

end_time_in_minutes = 20

fscore_all = []
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.019724363054314468, 0.34711857588253048, 0.36683973865301972, 0.50302073378485068, 0.50302073378485068, 0.50302073378485068, 0.50302073378485068, 0.68927914099271803, 0.78987634090775527, 0.91562398351946217, 0.96274558340716032, 0.96275571855244002, 0.96275909689018591, 0.96276923177138474, 0.96276923177138474, 0.95525757832562097, 0.9296087632841401, 0.9296087632841401, 0.9295631970563919, 0.92962265877217054, 0.93073721662776832, 0.92961768800185185, 0.94806689957432966, 0.95985053546435073, 0.95985053546435073, 0.95989644112001737, 0.95995281439798508, 0.95995281439798508, 0.96107176227848345, 0.96217488060091694, 0.96818632276802219, 0.96818632276802219])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06325768492571085, 0.43590238699474054, 0.44687096288248473, 0.54632791030425987, 0.54634441773757025, 0.54636915914381434, 0.54572256891553239, 0.67348404904390513, 0.7382603956139191, 0.8698257510052827, 0.93311187597522882, 0.9331187979095773, 0.9331516714515109, 0.93420458642001369, 0.95484745240213098, 0.97224891604963204, 0.89224119470644636, 0.89224119470644636, 0.89225214303127753, 0.89230323235251485, 0.89193024274130084, 0.8903832557833643, 0.8857692971796618, 0.87424104334877994, 0.87424104334877994, 0.87424104334877994, 0.87425710801617362, 0.87475760572243133, 0.8761553987170092, 0.88226503467549944, 0.94375436601413365, 0.94375436601413365])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.077347124000268011, 0.46175709810616072, 0.47326504459409485, 0.61372494703617153, 0.61373576425330367, 0.61373576425330367, 0.61411105351568118, 0.7533598534010052, 0.80056088320606167, 0.9284853606763569, 0.92891774777393199, 0.92891774777393199, 0.92892128530238427, 0.92376790562835076, 0.92763237442280722, 0.95983815375393366, 0.96848420339639063, 0.96848420339639063, 0.96850416557810093, 0.96851081946697726, 0.974058311176904, 0.97356833915652485, 0.9766624713255444, 0.97842535093922867, 0.97842535093922867, 0.97842535093922867, 0.97844844288869648, 0.97802102168889071, 0.97883266775481759, 0.97949389461190639, 0.9814345528442161, 0.9814345528442161])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.041830521572757802, 0.43252256330195565, 0.44166900079436872, 0.57582193458247855, 0.57582193458247855, 0.57583337013557945, 0.57583337013557945, 0.73974023391023602, 0.80343210402899168, 0.93479842357302356, 0.95807940665439184, 0.95808278415113668, 0.95808278415113668, 0.95809291650999062, 0.95814170564041734, 0.97302937033752424, 0.94856643904324844, 0.94852438800846528, 0.94852789238983359, 0.94856643904324844, 0.94893859249075396, 0.94718949300983712, 0.94319700394304851, 0.94881400713764619, 0.94885545850667408, 0.94885891263986322, 0.94884054113556981, 0.94875789667435795, 0.95073307602123491, 0.95794831740316144, 0.97127995802996758, 0.97127995802996758])
fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.029844774663824306, 0.38699193083843414, 0.4088931940312277, 0.48623366188897971, 0.48623366188897971, 0.48626623912310524, 0.48626623912310524, 0.58848328127230298, 0.65843586247679742, 0.78994887801636027, 0.89257349494408345, 0.89258091086244662, 0.89264466102631224, 0.89264836849893869, 0.94148183105238314, 0.96213939206275478, 0.9637235299610093, 0.9637235299610093, 0.96373687582705225, 0.96382671852061708, 0.96383005437564584, 0.96569694783359306, 0.97434033771593964, 0.97813173985727264, 0.97813173985727264, 0.97813834826668555, 0.97818460473944069, 0.97818460473944069, 0.97821623386911627, 0.98154625419403307, 0.98058829005531056, 0.98058829005531056])

real_time = [78.24733519554138, 83.8873610496521, 89.87082314491272, 95.48808813095093, 101.29039216041565, 108.51527118682861, 114.85740208625793, 121.802659034729, 128.04679012298584, 135.46603202819824, 143.24755120277405, 150.33575010299683, 157.47573900222778, 164.52847599983215, 168.15382599830627, 171.96078205108643, 177.81484603881836, 182.82996606826782, 186.72866821289062, 190.50451111793518, 194.4348030090332, 198.17638301849365, 202.13456320762634, 206.28870511054993, 210.23722100257874, 214.00053811073303, 218.27249002456665, 222.1042401790619, 227.8444859981537, 234.03558111190796, 238.06219911575317, 241.9252200126648, 246.13322401046753, 251.30293607711792, 255.35557317733765, 259.84323501586914, 266.58757519721985, 271.75530314445496, 275.9289391040802, 280.2854640483856, 287.1827781200409, 292.19982719421387]


nadeef_time = [0.0, 115.14512801170349, 264.73492312431335, 392.79481291770935, 4055.6318440437317, 7041.999365091324]
nadeef_fscore = [0.0, 0.046220859406105333, 0.2017617151875577, 0.19074416347434611, 0.19074416347434611, 0.19074416347434611]

openrefine_fscore = 0.904
openrefine_time = 2.5

'''
dboost_fscore = 0.327
runtime_dboost_sec = 355.5 + 17

Plotter(data, real_time, fscore_all,
        runtime_dboost_sec, dboost_fscore,
        nadeef_time, nadeef_fscore,
        openrefine_time, openrefine_fscore, 7)
'''


'''
dboost_sizes = [0, 10, 10, 20, 30, 40, 50]
dboost_times_list = [0.0, 347.22, 347.2249740123749, 436.14521183967588, 353.24385900497435, 283.38256888389589, 316.6848380088806]
dboost_fscore_list =[0.0, 0.0, 0.33875907302602848, 0.31244007308195193, 0.35271284626789956, 0.33183951200822881, 0.34427096926790796]

Plotter2(data, real_time, fscore_all,
        dboost_times_list, dboost_fscore_list,dboost_sizes,
        nadeef_time, nadeef_fscore,
        openrefine_time, openrefine_fscore, end_time=35*60)
'''

'''
#max labels
rows = 378.0 / data.shape[1]

dboost_sizes = [0, rows, rows, rows]
dboost_times_list = [0.0, 314.73, 314.7336003780365, 25*60]
dboost_fscore_list =[0.0, 0.0, 0.32203866399190073, 0.32203866399190073]
'''


#rows = 10, gaussian
dboost_gaussian_10_sizes = [0, 10, 10, 0]
dboost_gaussian_10_times_list = [0.0, 347.22, 347.2249740123749, end_time_in_minutes * 60]
dboost_gaussian_10_fscore_list =[0.0, 0.0, 0.33875907302602848, 0.33875907302602848]

rows = 378.0 / data.shape[1]
dboost_gaussian_max_sizes = [0, rows, rows, 0]
dboost_gaussian_max_times_list = [0.0, 314.73, 314.7336003780365, end_time_in_minutes*60]
dboost_gaussian_max_fscore_list =[0.0, 0.0, 0.32203866399190073, 0.32203866399190073]

#histogram
'''
[10, 20, 30, 40, 50]
[278.12884550094606, 260.09862642288209, 266.40816674232485, 271.07237462997438, 276.64677100181581]
[0.12918336030733477, 0.12415467184944085, 0.1030233023368667, 0.060995956427196817, 0.13017823505302101]
'''
dboost_hist_10_sizes = [0, 10, 10, 0]
dboost_hist_10_times_list = [0.0, 278.12, 278.12884550094606, end_time_in_minutes*60]
dboost_hist_10_fscore_list =[0.0, 0.0, 0.12918336030733477, 0.12918336030733477]

rows = 378.0 / data.shape[1]
dboost_hist_max_sizes = [0, rows, rows, 0]
dboost_hist_max_times_list = [0.0, 290.00, 290.00640182495118, end_time_in_minutes*60]
dboost_hist_max_fscore_list =[0.0, 0.0, 0.13017785176531418, 0.13017785176531418]



dboost_mixture_10_sizes = [0, 10, 10, 0]
dboost_mixture_10_times_list = [0.0, 1221.88, 1221.8805998325347, end_time_in_minutes*60]
dboost_mixture_10_fscore_list =[0.0, 0.0, 0.15543539374740178, 0.15543539374740178]

rows = 378.0 / data.shape[1]
dboost_mixture_max_sizes = [0, rows, rows, 0]
dboost_mixture_max_times_list = [0.0, 1170.5839161872864, 1170.5839161872864, end_time_in_minutes*60]
dboost_mixture_max_fscore_list =[0.0, 0.0, 0.35157332976611216, 0.35157332976611216]



Plotter2(data, real_time, fscore_all,
         [dboost_gaussian_10_times_list, dboost_gaussian_max_times_list, dboost_hist_10_times_list,
          dboost_hist_max_times_list, dboost_mixture_10_times_list, dboost_mixture_max_times_list],
         [dboost_gaussian_10_fscore_list, dboost_gaussian_max_fscore_list, dboost_hist_10_fscore_list,
          dboost_hist_max_fscore_list, dboost_mixture_10_fscore_list, dboost_mixture_max_fscore_list],
         [dboost_gaussian_10_sizes, dboost_gaussian_max_sizes, dboost_hist_10_sizes, dboost_hist_max_sizes,
          dboost_mixture_10_sizes, dboost_mixture_max_sizes],
         ["dBoost Gaussian on 10 rows", "dBoost Gaussian on max rows", "dBoost Histogram on 10 rows",
          "dBoost Histogram on max rows", "dBoost Mixture on 10 rows", "dBoost Mixture on max rows"],
         nadeef_time, nadeef_fscore,
         openrefine_time, openrefine_fscore, 7, end_time=end_time_in_minutes*60)