import matplotlib.pyplot as plt
import numpy as np

from ml.datasets.blackOak import BlackOakDataSet


class Plotter:

    def calc_waiting_time(self, real_time):
        save_time = []
        time = real_time[0] + self.init_labels * self.sec_pro_label
        save_time.append(time)
        for i in range(1, self.number_dirty_columns):
            time += (real_time[i] - real_time[i - 1]) + self.init_labels * self.sec_pro_label
            save_time.append(time)

        for i in range(self.number_dirty_columns, len(real_time)):
            time += (real_time[i] - real_time[i - 1]) + self.std_labels * self.sec_pro_label
            save_time.append(time)

        return save_time

    def plot_list(self, y_series, list_series, list_names, the_end, legend_location):
        fig = plt.figure()
        ax = plt.subplot(111)

        for i in range(len(list_series)):
            ax.plot(np.array(y_series[i]) / 60.0, list_series[i], label=list_names[i])

        ax.set_ylabel('F-score')
        ax.set_xlabel('Runtime in minutes')

        ax.set_xlim([0, (the_end / 60.0)])

        ax.legend(loc=legend_location)

        plt.show()

    def __init__(self, data, real_time, fscore_lists,
                 runtime_dboost_in_sec, dboost_fscore_res,
                 nadeef_time_list, nadeef_fscore_list,
                 openrefine_time_in_min, openrefine_fscore_res,
                 legend_location=8):

        self.number_dirty_columns = len(np.where (np.sum(data.matrix_is_error, axis=0) > 0)[0])
        number_dirty_columns_min_1 = self.number_dirty_columns - 1



        print number_dirty_columns_min_1

        self.init_labels = 4
        self.std_labels = 10
        self.sec_pro_label = 3.0

        matrix = np.matrix(fscore_lists)

        time = self.number_dirty_columns * self.init_labels * self.sec_pro_label

        approx_time = []
        approx_time_non_parallel = self.calc_waiting_time(real_time)

        average = list(np.mean(matrix, axis=0).A1)

        print average

        for i in range(number_dirty_columns_min_1, len(average)):
            print "time: " + str(time / 60) + " fscore: " + str(average[i])
            approx_time.append(time)
            time = time + (self.std_labels * self.sec_pro_label)

        print approx_time_non_parallel

        print len(approx_time)


        dboost_label_rows = 10
        runtime_dboost = (runtime_dboost_in_sec / 60.0)
        label_cost_10_rows = (data.shape[1] * dboost_label_rows * self.sec_pro_label / 60.0)
        time_dboost = runtime_dboost + label_cost_10_rows

        time_max = []
        time_max.append((time_dboost*60))
        time_max.extend(nadeef_time_list)
        time_max.append((openrefine_time_in_min*60))
        time_max.append(approx_time_non_parallel[-1])

        the_end = np.max(time_max) + 60.0

        dboost_fscore = [0, 0, dboost_fscore_res, dboost_fscore_res]
        dboost_time = [0, (time_dboost - 0.001) * 60, time_dboost * 60, the_end]

        nadeef_fscore = nadeef_fscore_list
        nadeef_time = nadeef_time_list

        openrefine_fscore = [0.0, 0.0, openrefine_fscore_res, openrefine_fscore_res]
        openrefine_time = [0, (openrefine_time_in_min - 0.001) * 60, openrefine_time_in_min * 60, the_end]

        self.plot_list([approx_time, approx_time_non_parallel, dboost_time, nadeef_time, openrefine_time],
                  [average[number_dirty_columns_min_1:len(average)], average, dboost_fscore, nadeef_fscore,
                   openrefine_fscore],
                  ['Our Algorithm in parallel', 'Our Algorithm waiting', 'dBoost', 'Nadeef', 'OpenRefine'],
                  the_end, legend_location)

if __name__ == '__main__':
    data = BlackOakDataSet()

    real_time = [98.9607720375061, 106.90468096733093, 117.18464612960815, 126.03854513168335, 136.4070701599121,
                 148.5586860179901, 157.37550401687622, 166.20514917373657, 175.1555471420288, 187.79943203926086,
                 198.16607403755188, 208.50641107559204, 222.70277214050293, 235.3381040096283, 247.21929001808167,
                 260.96219205856323, 271.32936000823975, 283.19671297073364, 297.118292093277, 307.40965604782104,
                 312.21079206466675, 317.0306351184845, 323.29048800468445, 329.6087520122528, 335.84182596206665,
                 341.31249499320984, 348.95508217811584, 355.45466899871826, 362.45290517807007, 367.4101231098175,
                 372.7983031272888, 378.1133441925049, 386.4010491371155, 392.5857231616974, 397.9242651462555,
                 406.2658519744873, 412.48264598846436, 417.82421708106995, 426.21170115470886, 432.397577047348,
                 437.7792229652405, 446.6719660758972, 452.8385581970215, 458.3843080997467, 467.37771797180176,
                 474.2485861778259, 481.20288610458374, 488.12609219551086, 493.633896112442, 501.8147280216217,
                 508.6590299606323, 514.6829421520233, 526.2420630455017, 533.8718559741974, 541.6582989692688,
                 551.1288449764252, 558.7843770980835, 566.7377851009369, 574.4549360275269, 581.7686660289764]

    fscore_all = []

    # distinct active learning, no stop criterion
    fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20019403096996738, 0.25515300387948225,
                       0.41289471412894713, 0.52015754712125062, 0.61942677773436339, 0.73661296462207126,
                       0.73748154532006671, 0.7327364275995466, 0.75332485507216751, 0.79220835814825041,
                       0.79437689246817489, 0.79672485701761986, 0.80070917242672568, 0.82785163874346979,
                       0.84959825456323546, 0.86694880264244434, 0.90884523358815206, 0.93648518396302094,
                       0.93648518396302094, 0.93649495562120522, 0.93652808011300137, 0.9351802605095475,
                       0.93590989502864641, 0.94229941672067408, 0.94609729891021965, 0.95349021012919677,
                       0.96231356296376602, 0.9618072306483475, 0.9618072306483475, 0.9618072306483475,
                       0.96041117148111255, 0.96542813269501904, 0.96545251045614311, 0.96580044545528299,
                       0.97562558152511725, 0.96682307352321428, 0.96514175939464319, 0.96584006516609566,
                       0.96584006516609566, 0.96584006516609566, 0.96694573485119195, 0.9676177729987625,
                       0.96761909140365798, 0.96773666313817663, 0.97132472609143417, 0.97835911597214775,
                       0.97723047186400569, 0.97756865216880284, 0.97756865216880284, 0.97756865216880284])
    fscore_all.append(
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20039484358660534, 0.23960625733568075, 0.4062745651132354,
         0.54428208899432917, 0.64454769931521172, 0.77095238595327864, 0.774274789459789, 0.79016487646599587,
         0.75601770621117248, 0.74117069588380102, 0.74266597200233631, 0.74593757350402123, 0.74592154288837376,
         0.74901175123319674, 0.76763352964640752, 0.77548328553531165, 0.80841796463437754, 0.8124400049589996,
         0.86208182969937164, 0.91940901570644351, 0.91993277984114163, 0.92461240160369562, 0.92607252973889664,
         0.92607252973889664, 0.93643998748095625, 0.94439476846794934, 0.95461995924598686, 0.95515282910572818,
         0.95515282910572818, 0.95515282910572818, 0.95515282910572818, 0.95736748050649323, 0.95767726074071802,
         0.95767848193917204, 0.96669770217231388, 0.97125181057128118, 0.97736500203004473, 0.97737564804597221,
         0.97737564804597221, 0.97737564804597221, 0.97737830951532012, 0.97891986221180971, 0.97900211654923219,
         0.97900211654923219, 0.98519875214898955, 0.99029490672924969, 0.9928718650012105, 0.9928718650012105,
         0.9928718650012105, 0.9928718650012105])
    fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19934897294870357, 0.24292873792498088,
                       0.40613569514748721, 0.53758471738794489, 0.62024900180613252, 0.74799841887490626,
                       0.75256271405608244, 0.77203531572628703, 0.79028848062269696, 0.82952305489525546,
                       0.83315255001942445, 0.84654209218956111, 0.84814903749394488, 0.85762355120253697,
                       0.88258985372760235, 0.88791060489656881, 0.90955643707176348, 0.91070067554129397,
                       0.91352122429935279, 0.91406869741913133, 0.91406869741913133, 0.91122043575210754,
                       0.91134542568140142, 0.90742274232270559, 0.90899672883013516, 0.92333131084545461,
                       0.93984466889704843, 0.93997190010633469, 0.93997190010633469, 0.93997190010633469,
                       0.94010679751767934, 0.94282001900756207, 0.94282141639195183, 0.94643569636755087,
                       0.96027370176929394, 0.96165262188256972, 0.96398482820759102, 0.96461253314931006,
                       0.96461253314931006, 0.96461253314931006, 0.96461928350182236, 0.96469386570102877,
                       0.96469386570102877, 0.96484607536057432, 0.97230949304830727, 0.97853974564261137,
                       0.98714429289679906, 0.98714429289679906, 0.98714429289679906, 0.98714429289679906])
    fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19334436749299577, 0.23311130756754689,
                       0.39654885266411838, 0.5049680586710843, 0.60799479141106305, 0.727623922126859,
                       0.72879815724921726, 0.74770291018955493, 0.76847135708043179, 0.80756085502164221,
                       0.81754754772449445, 0.81960855965551938, 0.82280405751562569, 0.85670437987606962,
                       0.85960391583211437, 0.86786263824776, 0.92092098452626325, 0.92235210665551481,
                       0.92235495896806785, 0.92247826029409818, 0.92247780505422794, 0.92273671230670307,
                       0.92260301362956676, 0.92266656102891176, 0.93150966601082852, 0.94164442473147569,
                       0.93572350715831798, 0.93641732763567131, 0.93641732763567131, 0.93641732763567131,
                       0.93712073333025037, 0.93712892526737923, 0.93734413124005045, 0.93753580925709445,
                       0.94834220977126504, 0.94816880379976576, 0.95104972205698346, 0.94800053685441654,
                       0.94800053685441654, 0.94800053685441654, 0.94821991577106313, 0.9519236404312299,
                       0.95193432247116294, 0.95194052059764767, 0.95696911571150178, 0.9679383839191521,
                       0.97308946650773986, 0.97586545470192687, 0.97586545470192687, 0.97586545470192687])
    fscore_all.append(
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18989951225245341, 0.2531154381397524, 0.3673822992805425,
         0.47637115841229777, 0.59212327031273759, 0.70764693490625663, 0.71358926824522639, 0.72561176465881339,
         0.74555173690332111, 0.73240773880537657, 0.72401105746768424, 0.71970783366081625, 0.74124848514827002,
         0.76826963206117971, 0.78427351790277033, 0.79046301530161944, 0.83746396113229737, 0.84396030881503836,
         0.84396030881503836, 0.89527047197801868, 0.91387605599491906, 0.92116250188260906, 0.95150217496498479,
         0.95132272564124498, 0.95304795720009017, 0.96725397032279981, 0.96725397032279981, 0.96737276825921925,
         0.96737276825921925, 0.96737276825921925, 0.96737276825921925, 0.96787558228793158, 0.96828648197662581,
         0.96853855540858103, 0.97675870536297382, 0.98370129257477112, 0.97817003163197558, 0.97875798903579336,
         0.97875798903579336, 0.97875798903579336, 0.97875798903579336, 0.97867823831092893, 0.97868222859204257,
         0.97870833148848946, 0.98038746586919778, 0.98427340245721562, 0.99217081664042084, 0.99163064760911224,
         0.99163064760911224, 0.99163064760911224])
    fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19935954182247956, 0.25193324191863492,
                       0.41500081129320132, 0.51974290297681935, 0.6082719599111337, 0.73643191239643624,
                       0.73754615276873303, 0.74965381634833761, 0.73162587835552872, 0.76790802079916098,
                       0.76999383090457607, 0.77694865953908776, 0.7776813995165458, 0.80925289622411234,
                       0.83301865610711967, 0.83958015247685525, 0.88501013847948573, 0.89299150612678879,
                       0.88334292502250356, 0.88612144858066566, 0.88318332636719199, 0.88398565737635459,
                       0.88387870916394962, 0.88361948423228953, 0.89070357817212376, 0.89845145289238693,
                       0.90350905478510857, 0.90419770223208196, 0.95642130067795961, 0.95642130067795961,
                       0.96089262470777936, 0.96303173006109521, 0.96317284861562635, 0.96345646745852087,
                       0.96641331667350627, 0.97278421242308888, 0.97113125253597987, 0.97114398519883205,
                       0.97114398519883205, 0.97114398519883205, 0.97156264591033703, 0.97199579982651452,
                       0.97199579982651452, 0.972048968433464, 0.98260668985429123, 0.98509553775892411,
                       0.98802678929211485, 0.9880479231683903, 0.98804663353103339, 0.98804663353103339])
    fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20114008019364735, 0.24382292265548375,
                       0.40610580808855878, 0.51377044596672727, 0.60476542864190619, 0.73793932992166322,
                       0.74008014639457054, 0.75032124906183906, 0.77103577059408934, 0.78656898881845672,
                       0.79147200997351108, 0.79397790401403456, 0.79525668436664199, 0.82135775885043016,
                       0.84514553194163022, 0.84779504398877048, 0.88936469433645371, 0.89883378752109622,
                       0.89893306781275728, 0.92478520081709459, 0.92533541139035003, 0.93037724243575837,
                       0.93098494147975863, 0.93670672902975394, 0.94966405077315685, 0.95943921232876717,
                       0.96574060857717514, 0.96576567224219145, 0.96576567224219145, 0.96576567224219145,
                       0.9655326014611546, 0.96914785475287346, 0.96935685526319193, 0.96945065225300131,
                       0.96362844073802512, 0.96917805072989682, 0.97315747180291223, 0.97261627663143768,
                       0.97261627663143768, 0.97261627663143768, 0.97262435551641246, 0.97310214108005644,
                       0.97315732697885904, 0.97320907721611416, 0.98578195333362972, 0.9889314953558952,
                       0.98552921109852476, 0.98648249439427604, 0.98648249439427604, 0.98648249439427604])
    fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.19977367345569161, 0.24039995745133494,
                       0.40234051055097181, 0.51135123966218576, 0.57614995152429171, 0.71044642047393036,
                       0.71270029196073459, 0.72916728682500198, 0.75028157862455802, 0.76686213139240911,
                       0.77266896656123274, 0.78505707697544347, 0.78662283229909147, 0.81779107427128506,
                       0.85236905273836638, 0.85339513337905559, 0.90388142390750126, 0.9072771764848786,
                       0.9072771764848786, 0.93261968480523338, 0.93360891668306012, 0.93807998002580006,
                       0.93817249391789193, 0.93805107124738207, 0.94296338769028054, 0.94483615572988011,
                       0.94483615572988011, 0.9447682738418226, 0.9447682738418226, 0.9447682738418226,
                       0.94472364411904486, 0.94621806065819258, 0.94622761643083197, 0.94646400281822951,
                       0.95070201782725872, 0.96699868982214243, 0.95854963599413479, 0.958820002521802,
                       0.958820002521802, 0.958820002521802, 0.95888292280592047, 0.95899247704178481,
                       0.95899247704178481, 0.95900196148084083, 0.97079746435632108, 0.97515578214777043,
                       0.98519417223498118, 0.98574612850189436, 0.98574612850189436, 0.98574612850189436])
    fscore_all.append([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20009481851504954, 0.26213898096011434,
                       0.42115234996996775, 0.4941012035345948, 0.59307757102381498, 0.72504361479413826,
                       0.72707902124089574, 0.74631639879654976, 0.76664604656394109, 0.74812914205469405,
                       0.75059176203909195, 0.75290359088948478, 0.75459236162978938, 0.78793127846582001,
                       0.81315705171157304, 0.81295173417414501, 0.86346913981622486, 0.86333349989823294,
                       0.86387953142989415, 0.92261546626673741, 0.92372467181491558, 0.9252771686005582,
                       0.92532751589308304, 0.94460046811408949, 0.94740816711824094, 0.95408095486270772,
                       0.94104288223914079, 0.94327567580126159, 0.94327567580126159, 0.94327567580126159,
                       0.94540817050959514, 0.94611096705613107, 0.94611368617682079, 0.9458794619695261,
                       0.95191217225583924, 0.9646017465983483, 0.96341175362081277, 0.96343316042247218,
                       0.96343316042247218, 0.96343316042247218, 0.96314795512946194, 0.96320994310523389,
                       0.96321128039499959, 0.96344515225707139, 0.97027763473526485, 0.97435411321068321,
                       0.98818925481505937, 0.98818925481505937, 0.98818925481505937, 0.98818925481505937])

    dboost_fscore = 0.7626
    runtime_dboost_sec = 234

    nadeef_fscore = [0.0, 0.0, 0.35, 0.35]
    nadeef_time = [0, (30 - 0.001) * 60, 30 * 60, 35 * 60]

    openrefine_fscore = 0.981
    openrefine_time = 4

    Plotter(data, real_time, fscore_all, runtime_dboost_sec, dboost_fscore, nadeef_time, nadeef_fscore, openrefine_time, openrefine_fscore)